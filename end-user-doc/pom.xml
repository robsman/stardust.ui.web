<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2011, 2012 SunGard CSA LLC and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
       SunGard CSA LLC - initial API and implementation and/or initial documentation
 -->
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <groupId>org.eclipse.stardust.ui.web</groupId>
   <artifactId>ipp-end-user-doc</artifactId>
   <packaging>jar</packaging>

   <parent>
      <groupId>org.eclipse.stardust</groupId>
      <artifactId>product-parent</artifactId>
      <version>9.9.9-SNAPSHOT</version>
      <relativePath>../../product/product-parent/pom.xml</relativePath>
   </parent>

   <name>End User Documentation</name>

   <properties>
      <!-- Source paths used in copy-documentation -->
      <documentation.dir>../../documentation</documentation.dir>
      <bpm.doc.path>${documentation.dir}/org.eclipse.stardust.docs.analyst</bpm.doc.path>
      <enduser.doc.path>${documentation.dir}/org.eclipse.stardust.docs.enduser</enduser.doc.path>
      
      <project.build.sourceEncoding>iso-8859-1</project.build.sourceEncoding>
   </properties>

   <build>
      <resources>
         <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <excludes>
               <exclude>**/*.css</exclude>
               <exclude>**/*.js</exclude>
            </excludes>
         </resource>
         <resource>
            <directory>${project.build.directory}/generated-resources</directory>
            <filtering>false</filtering>
            <includes>
               <include>**/*.png</include>
               <include>**/*.gif</include>
               <include>**/*.jpg</include>
            </includes>
         </resource>

         <!-- product.properties filter is provided by product-parent -->
         <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <includes>
               <include>**/*.css</include>
               <include>**/*.js</include>
            </includes>
         </resource>
         <resource>
            <directory>${project.build.directory}/generated-resources</directory>
            <filtering>true</filtering>
            <excludes>
               <exclude>**/*.png</exclude>
               <exclude>**/*.gif</exclude>
               <exclude>**/*.jpg</exclude>
            </excludes>
         </resource>
      </resources>

      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <configuration>
               <skipSource>true</skipSource>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
               <execution>
                  <id>copy-documentation</id>
                  <phase>generate-resources</phase>
                  <configuration>
                     <target>
                     <!-- source locations -->
                     
                     
                     <!-- target locations -->
                     <property name="build.src.doc" value="${project.build.directory}/generated-resources/META-INF/doc"/>
                     <property name="build.src.bpmdoc" value="${project.build.directory}/generated-resources/META-INF/doc/bpm"/>
                     <property name="build.src.portaldoc" value="${project.build.directory}/generated-resources/META-INF/doc/portal"/>

                     <!-- copy business process modeler doc -->
                     <copy file="${bpm.doc.path}/html/toc.html" todir="${build.src.doc}" />
                     <replace file="${build.src.doc}/toc.html" token="handbooks" value="bpm" /> 
                     <!-- copy images without filtering -->
                     <copy todir="${build.src.bpmdoc}" >
                        <fileset dir="${bpm.doc.path}/html/handbooks">
                           <include name="**/*.png"/>
                           <include name="**/*.gif"/>
                           <include name="**/*.jpg"/>
                        </fileset>
                     </copy>
                     
                     <!-- copy files and replace references to other plugins with links to relative path inside jar files according to folder level -->
                     <!-- level 1 -->
                     <copy todir="${build.src.bpmdoc}" >
                        <fileset dir="${bpm.doc.path}/html/handbooks">
                           <include name="*/*.html"/>
                           <include name="*/*.htm"/>
                        </fileset>
                        <filterchain>
                            <tokenfilter>
                               <replaceregex pattern="PLUGINS_ROOT/org.eclipse.stardust.docs.enduser/html/handbooks/" replace="../../portal/"/>
                            </tokenfilter>
                        </filterchain>
                     </copy>

                     <!-- level 2 -->
                     <copy todir="${build.src.bpmdoc}" >
                        <fileset dir="${bpm.doc.path}/html/handbooks">
                           <include name="*/*/*.html"/>
                           <include name="*/*/*.htm"/>
                        </fileset>
                        <filterchain>
                            <tokenfilter>
                                <replaceregex pattern="PLUGINS_ROOT/org.eclipse.stardust.docs.enduser/html/handbooks/" replace="../../../portal/"/>
                            </tokenfilter>
                        </filterchain>
                     </copy>
 
                     <!-- copy end user doc -->
                     <!-- copy images without filtering -->
                     <copy todir="${build.src.portaldoc}" >
                        <fileset dir="${enduser.doc.path}/html/handbooks">
                           <include name="**/*.png"/>
                           <include name="**/*.gif"/>
                           <include name="**/*.jpg"/>
                        </fileset>
                     </copy>
                     <!-- copy files and replace references to other plugins with links to relative path inside jar files according to folder level -->
                     <!-- (intermediate solution required as End User doc from Portal does not know the Eclipse variable!) -->
                     <!-- level 1 -->
                     <copy todir="${build.src.portaldoc}" overwrite="true">
                        <fileset dir="${enduser.doc.path}/html/handbooks">
                           <include name="*/*.html"/>
                           <include name="*/*.htm"/>
                        </fileset>
                        <filterchain>
                            <tokenfilter>
                               <replaceregex pattern="PLUGINS_ROOT/org.eclipse.stardust.docs.analyst/html/handbooks/" replace="../../bpm/"/>
                               <replaceregex pattern="PLUGINS_ROOT/org.eclipse.stardust.docs.analyst/html/toc.html" replace="../../toc.html"/>
                            </tokenfilter>
                        </filterchain>
                     </copy>
      
                     <!-- level 2 -->
                     <copy todir="${build.src.portaldoc}" overwrite="true">
                        <fileset dir="${enduser.doc.path}/html/handbooks">
                           <include name="*/*/*.html"/>
                           <include name="*/*/*.htm"/>
                        </fileset>
                        <filterchain>
                            <tokenfilter>
                               <replaceregex pattern="PLUGINS_ROOT/org.eclipse.stardust.docs.analyst/html/handbooks/" replace="../../../bpm/"/>
                               <replaceregex pattern="PLUGINS_ROOT/org.eclipse.stardust.docs.analyst/html/toc.html" replace="../../../toc.html"/>
                            </tokenfilter>
                        </filterchain>
                     </copy>
      
                     <!-- level 3 -->
                     <copy todir="${build.src.portaldoc}" overwrite="true">
                        <fileset dir="${enduser.doc.path}/html/handbooks">
                           <include name="*/*/*/*.html"/>
                           <include name="*/*/*/*.htm"/>
                        </fileset>
                        <filterchain>
                            <tokenfilter>
                               <replaceregex pattern="PLUGINS_ROOT/org.eclipse.stardust.docs.analyst/html/handbooks/" replace="../../../../bpm/"/>
                               <replaceregex pattern="PLUGINS_ROOT/org.eclipse.stardust.docs.analyst/html/toc.html" replace="../../../../toc.html"/>
                            </tokenfilter>
                        </filterchain>
                     </copy>

                     <!-- level 4 -->
                     <copy todir="${build.src.portaldoc}" overwrite="true">
                        <fileset dir="${enduser.doc.path}/html/handbooks">
                           <include name="*/*/*/*/*.html"/>
                           <include name="*/*/*/*/*.htm"/>
                        </fileset>
                        <filterchain>
                            <tokenfilter>
                               <replaceregex pattern="PLUGINS_ROOT/org.eclipse.stardust.docs.analyst/html/handbooks/" replace="../../../../../bpm/"/>
                               <replaceregex pattern="PLUGINS_ROOT/org.eclipse.stardust.docs.analyst/html/toc.html" replace="../../../../../toc.html"/>
                            </tokenfilter>
                        </filterchain>
                     </copy>

                     </target>
                  </configuration>
                  <goals>
                     <goal>run</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
</project>
