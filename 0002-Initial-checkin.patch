From 1c51a35ab35373b1c9e9b34b5fb631b96287b401 Mon Sep 17 00:00:00 2001
From: "Gille, Marc" <Marc.Gille@sungard.com>
Date: Sat, 19 Jul 2014 18:56:44 -0400
Subject: [PATCH 2/6] Initial checkin.

---
 document-triage                                    |   1 +
 liberty-indexing/.classpath                        |  40 +++
 liberty-indexing/.factorypath                      |   2 +
 liberty-indexing/.gitignore                        |   3 +
 liberty-indexing/.jsdtscope                        |   6 +
 liberty-indexing/.project                          |  43 +++
 liberty-indexing/.settings/.jsdtscope              |  11 +
 .../.settings/org.apache.ivyde.eclipse.prefs       |   2 +
 .../.settings/org.eclipse.core.resources.prefs     |   4 +
 .../.settings/org.eclipse.jdt.core.prefs           |  99 +++++++
 .../org.eclipse.ltk.core.refactoring.prefs         |   2 +
 .../.settings/org.eclipse.m2e.core.prefs           |   4 +
 .../.settings/org.eclipse.wst.common.component     |   8 +
 .../org.eclipse.wst.common.project.facet.core.xml  |   9 +
 .../org.eclipse.wst.jsdt.ui.superType.container    |   1 +
 .../org.eclipse.wst.jsdt.ui.superType.name         |   1 +
 .../.settings/org.eclipse.wst.validation.prefs     |   3 +
 .../.settings/org.maven.ide.eclipse.prefs          |   8 +
 liberty-indexing/build.xml                         | 190 ++++++++++++
 liberty-indexing/pom.xml                           | 115 ++++++++
 liberty-indexing/sample-documents/3087_001.tif     | Bin 0 -> 42478 bytes
 liberty-indexing/sample-documents/Business.pdf     | Bin 0 -> 124802 bytes
 .../liberty/indexing/rest/IndexingResource.java    |  75 +++++
 .../liberty/indexing/rest/JsonMarshaller.java      | 221 ++++++++++++++
 .../liberty/indexing/service/IndexingService.java  | 140 +++++++++
 .../src/main/resources/META-INF/MANIFEST.MF        |   3 +
 .../META-INF/liberty-indexing.portal-plugin        |   1 +
 .../META-INF/spring/jax-rs-cxf-context.xml         |  26 ++
 .../META-INF/spring/liberty-indexing-context.xml   |  20 ++
 .../resources/META-INF/webapp/indexingPanel.html   | 319 +++++++++++++++++++++
 .../META-INF/webapp/js/IndexingPanelController.js  | 157 ++++++++++
 .../META-INF/webapp/js/IndexingPanelMain.js        |  45 +++
 .../META-INF/webapp/js/IndexingService.js          | 300 +++++++++++++++++++
 33 files changed, 1859 insertions(+)
 create mode 160000 document-triage
 create mode 100644 liberty-indexing/.classpath
 create mode 100644 liberty-indexing/.factorypath
 create mode 100644 liberty-indexing/.gitignore
 create mode 100644 liberty-indexing/.jsdtscope
 create mode 100644 liberty-indexing/.project
 create mode 100644 liberty-indexing/.settings/.jsdtscope
 create mode 100644 liberty-indexing/.settings/org.apache.ivyde.eclipse.prefs
 create mode 100644 liberty-indexing/.settings/org.eclipse.core.resources.prefs
 create mode 100644 liberty-indexing/.settings/org.eclipse.jdt.core.prefs
 create mode 100644 liberty-indexing/.settings/org.eclipse.ltk.core.refactoring.prefs
 create mode 100644 liberty-indexing/.settings/org.eclipse.m2e.core.prefs
 create mode 100644 liberty-indexing/.settings/org.eclipse.wst.common.component
 create mode 100644 liberty-indexing/.settings/org.eclipse.wst.common.project.facet.core.xml
 create mode 100644 liberty-indexing/.settings/org.eclipse.wst.jsdt.ui.superType.container
 create mode 100644 liberty-indexing/.settings/org.eclipse.wst.jsdt.ui.superType.name
 create mode 100644 liberty-indexing/.settings/org.eclipse.wst.validation.prefs
 create mode 100644 liberty-indexing/.settings/org.maven.ide.eclipse.prefs
 create mode 100644 liberty-indexing/build.xml
 create mode 100644 liberty-indexing/pom.xml
 create mode 100644 liberty-indexing/sample-documents/3087_001.tif
 create mode 100644 liberty-indexing/sample-documents/Business.pdf
 create mode 100644 liberty-indexing/src/main/java/com/sungard/insurance/liberty/indexing/rest/IndexingResource.java
 create mode 100644 liberty-indexing/src/main/java/com/sungard/insurance/liberty/indexing/rest/JsonMarshaller.java
 create mode 100644 liberty-indexing/src/main/java/com/sungard/insurance/liberty/indexing/service/IndexingService.java
 create mode 100644 liberty-indexing/src/main/resources/META-INF/MANIFEST.MF
 create mode 100644 liberty-indexing/src/main/resources/META-INF/liberty-indexing.portal-plugin
 create mode 100644 liberty-indexing/src/main/resources/META-INF/spring/jax-rs-cxf-context.xml
 create mode 100644 liberty-indexing/src/main/resources/META-INF/spring/liberty-indexing-context.xml
 create mode 100644 liberty-indexing/src/main/resources/META-INF/webapp/indexingPanel.html
 create mode 100644 liberty-indexing/src/main/resources/META-INF/webapp/js/IndexingPanelController.js
 create mode 100644 liberty-indexing/src/main/resources/META-INF/webapp/js/IndexingPanelMain.js
 create mode 100644 liberty-indexing/src/main/resources/META-INF/webapp/js/IndexingService.js

diff --git a/document-triage b/document-triage
new file mode 160000
index 0000000..7e7f1a4
--- /dev/null
+++ b/document-triage
@@ -0,0 +1 @@
+Subproject commit 7e7f1a4d3019aba97b304468536557bf1680a5d5
diff --git a/liberty-indexing/.classpath b/liberty-indexing/.classpath
new file mode 100644
index 0000000..0c73293
--- /dev/null
+++ b/liberty-indexing/.classpath
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" output="target/classes" path="src/main/java">
+		<attributes>
+			<attribute name="optional" value="true"/>
+			<attribute name="maven.pomderived" value="true"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry excluding="**" kind="src" output="target/classes" path="src/main/resources">
+		<attributes>
+			<attribute name="maven.pomderived" value="true"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="src" output="target/test-classes" path="src/test/java">
+		<attributes>
+			<attribute name="optional" value="true"/>
+			<attribute name="maven.pomderived" value="true"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="var" path="STARDUST_JAXWS_CXF_LIBS/lib/gson.jar"/>
+	<classpathentry kind="var" path="STARDUST_PORTAL_LIBS/lib/slf4j-log4j12.jar"/>
+	<classpathentry kind="var" path="STARDUST_CXF_LIBS/lib/commons-logging.jar"/>
+	<classpathentry kind="var" path="STARDUST_CXF_LIBS/lib/stardust-engine-ws-cxf.jar"/>
+	<classpathentry kind="var" path="CARNOT_ENGINE_BASE_LIBS/lib/carnot-base.jar"/>
+	<classpathentry kind="var" path="STARDUST_JAXWS_CXF_LIBS/lib/cxf-rt-frontend-jaxrs.jar"/>
+	<classpathentry kind="var" path="STARDUST_PORTAL_LIBS/lib/slf4j-api.jar"/>
+	<classpathentry kind="con" path="org.eclipse.jst.server.core.container/org.eclipse.jst.server.tomcat.runtimeTarget/Apache Tomcat v7.0">
+		<attributes>
+			<attribute name="owner.project.facets" value="jst.utility"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="var" path="CARNOT_ENGINE_LIBS/lib/carnot-engine.jar"/>
+	<classpathentry kind="var" path="STARDUST_SPRING_LIBS/lib/spring-beans.jar"/>
+	<classpathentry kind="var" path="STARDUST_PORTAL_LIBS/lib/ipp-portal-common.jar"/>
+	<classpathentry kind="var" path="STARDUST_PORTAL_LIBS/lib/ipp-views-common.jar"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
+	<classpathentry kind="var" path="STARDUST_PORTAL_LIBS/lib/icepdf-core-5.0.0.jar"/>
+	<classpathentry kind="var" path="STARDUST_PORTAL_LIBS/lib/jsr311-api-1.1.1-eclipse01.jar"/>
+	<classpathentry kind="output" path="target/classes"/>
+</classpath>
diff --git a/liberty-indexing/.factorypath b/liberty-indexing/.factorypath
new file mode 100644
index 0000000..610dea5
--- /dev/null
+++ b/liberty-indexing/.factorypath
@@ -0,0 +1,2 @@
+<factorypath>
+</factorypath>
diff --git a/liberty-indexing/.gitignore b/liberty-indexing/.gitignore
new file mode 100644
index 0000000..5b5ba90
--- /dev/null
+++ b/liberty-indexing/.gitignore
@@ -0,0 +1,3 @@
+build/
+/target
+/bin
diff --git a/liberty-indexing/.jsdtscope b/liberty-indexing/.jsdtscope
new file mode 100644
index 0000000..000a6e8
--- /dev/null
+++ b/liberty-indexing/.jsdtscope
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path=""/>
+	<classpathentry kind="con" path="org.eclipse.wst.jsdt.launching.JRE_CONTAINER"/>
+	<classpathentry kind="output" path=""/>
+</classpath>
diff --git a/liberty-indexing/.project b/liberty-indexing/.project
new file mode 100644
index 0000000..f9689e9
--- /dev/null
+++ b/liberty-indexing/.project
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>liberty-indexing</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.wst.jsdt.core.javascriptValidator</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.wst.common.project.facet.core.builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.wst.validation.validationbuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.m2e.core.maven2Builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.m2e.core.maven2Nature</nature>
+		<nature>org.eclipse.jem.workbench.JavaEMFNature</nature>
+		<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>
+		<nature>org.eclipse.wst.common.project.facet.core.nature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.wst.jsdt.core.jsNature</nature>
+		<nature>org.apache.ivyde.eclipse.ivynature</nature>
+	</natures>
+</projectDescription>
diff --git a/liberty-indexing/.settings/.jsdtscope b/liberty-indexing/.settings/.jsdtscope
new file mode 100644
index 0000000..bbb8e68
--- /dev/null
+++ b/liberty-indexing/.settings/.jsdtscope
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="con" path="org.eclipse.wst.jsdt.launching.JRE_CONTAINER"/>
+	<classpathentry kind="con" path="org.eclipse.wst.jsdt.launching.WebProject">
+		<attributes>
+			<attribute name="hide" value="true"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="con" path="org.eclipse.wst.jsdt.launching.baseBrowserLibrary"/>
+	<classpathentry kind="output" path=""/>
+</classpath>
diff --git a/liberty-indexing/.settings/org.apache.ivyde.eclipse.prefs b/liberty-indexing/.settings/org.apache.ivyde.eclipse.prefs
new file mode 100644
index 0000000..a95f744
--- /dev/null
+++ b/liberty-indexing/.settings/org.apache.ivyde.eclipse.prefs
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+org.apache.ivyde.eclipse.standaloneretrieve=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><setuplist/>
diff --git a/liberty-indexing/.settings/org.eclipse.core.resources.prefs b/liberty-indexing/.settings/org.eclipse.core.resources.prefs
new file mode 100644
index 0000000..bae30bb
--- /dev/null
+++ b/liberty-indexing/.settings/org.eclipse.core.resources.prefs
@@ -0,0 +1,4 @@
+#Thu May 15 06:01:18 CDT 2014
+eclipse.preferences.version=1
+encoding//src/main/java=UTF-8
+encoding//src/main/resources=UTF-8
diff --git a/liberty-indexing/.settings/org.eclipse.jdt.core.prefs b/liberty-indexing/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..812fbdb
--- /dev/null
+++ b/liberty-indexing/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,99 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=warning
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=ignore
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=warning
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=warning
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=ignore
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=ignore
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=warning
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=ignore
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=ignore
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedImport=warning
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=warning
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.6
diff --git a/liberty-indexing/.settings/org.eclipse.ltk.core.refactoring.prefs b/liberty-indexing/.settings/org.eclipse.ltk.core.refactoring.prefs
new file mode 100644
index 0000000..b196c64
--- /dev/null
+++ b/liberty-indexing/.settings/org.eclipse.ltk.core.refactoring.prefs
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+org.eclipse.ltk.core.refactoring.enable.project.refactoring.history=false
diff --git a/liberty-indexing/.settings/org.eclipse.m2e.core.prefs b/liberty-indexing/.settings/org.eclipse.m2e.core.prefs
new file mode 100644
index 0000000..f897a7f
--- /dev/null
+++ b/liberty-indexing/.settings/org.eclipse.m2e.core.prefs
@@ -0,0 +1,4 @@
+activeProfiles=
+eclipse.preferences.version=1
+resolveWorkspaceProjects=true
+version=1
diff --git a/liberty-indexing/.settings/org.eclipse.wst.common.component b/liberty-indexing/.settings/org.eclipse.wst.common.component
new file mode 100644
index 0000000..923ff3b
--- /dev/null
+++ b/liberty-indexing/.settings/org.eclipse.wst.common.component
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project-modules id="moduleCoreId" project-version="1.5.0">
+<wb-module deploy-name="document-triage">
+        <wb-resource deploy-path="/" source-path="/src/main/java"/>
+        <wb-resource deploy-path="/" source-path="/src/main/resources"/>
+        <wb-resource deploy-path="/" source-path="/src/test/java"/>
+</wb-module>
+</project-modules>
diff --git a/liberty-indexing/.settings/org.eclipse.wst.common.project.facet.core.xml b/liberty-indexing/.settings/org.eclipse.wst.common.project.facet.core.xml
new file mode 100644
index 0000000..8a19907
--- /dev/null
+++ b/liberty-indexing/.settings/org.eclipse.wst.common.project.facet.core.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<faceted-project>
+  <runtime name="Apache Tomcat v7.0"/>
+  <fixed facet="jst.java"/>
+  <fixed facet="jst.utility"/>
+  <installed facet="jst.utility" version="1.0"/>
+  <installed facet="wst.jsdt.web" version="1.0"/>
+  <installed facet="jst.java" version="1.6"/>
+</faceted-project>
diff --git a/liberty-indexing/.settings/org.eclipse.wst.jsdt.ui.superType.container b/liberty-indexing/.settings/org.eclipse.wst.jsdt.ui.superType.container
new file mode 100644
index 0000000..3bd5d0a
--- /dev/null
+++ b/liberty-indexing/.settings/org.eclipse.wst.jsdt.ui.superType.container
@@ -0,0 +1 @@
+org.eclipse.wst.jsdt.launching.baseBrowserLibrary
\ No newline at end of file
diff --git a/liberty-indexing/.settings/org.eclipse.wst.jsdt.ui.superType.name b/liberty-indexing/.settings/org.eclipse.wst.jsdt.ui.superType.name
new file mode 100644
index 0000000..05bd71b
--- /dev/null
+++ b/liberty-indexing/.settings/org.eclipse.wst.jsdt.ui.superType.name
@@ -0,0 +1 @@
+Window
\ No newline at end of file
diff --git a/liberty-indexing/.settings/org.eclipse.wst.validation.prefs b/liberty-indexing/.settings/org.eclipse.wst.validation.prefs
new file mode 100644
index 0000000..5a309eb
--- /dev/null
+++ b/liberty-indexing/.settings/org.eclipse.wst.validation.prefs
@@ -0,0 +1,3 @@
+#Wed Jun 04 16:03:16 CDT 2014
+disabled=06target
+eclipse.preferences.version=1
diff --git a/liberty-indexing/.settings/org.maven.ide.eclipse.prefs b/liberty-indexing/.settings/org.maven.ide.eclipse.prefs
new file mode 100644
index 0000000..6bc5de6
--- /dev/null
+++ b/liberty-indexing/.settings/org.maven.ide.eclipse.prefs
@@ -0,0 +1,8 @@
+#Fri Jun 08 17:17:12 CEST 2012
+activeProfiles=
+eclipse.preferences.version=1
+fullBuildGoals=process-test-resources
+resolveWorkspaceProjects=true
+resourceFilterGoals=process-resources resources\:testResources
+skipCompilerPlugin=true
+version=1
diff --git a/liberty-indexing/build.xml b/liberty-indexing/build.xml
new file mode 100644
index 0000000..77af134
--- /dev/null
+++ b/liberty-indexing/build.xml
@@ -0,0 +1,190 @@
+<!--
+    Copyright (c) 2011 SunGard CSA LLC and others.
+    All rights reserved. This program and the accompanying materials
+    are made available under the terms of the Eclipse Public License v1.0
+    which accompanies this distribution, and is available at
+    http://www.eclipse.org/legal/epl-v10.html
+   
+    Contributors:
+       SunGard CSA LLC - initial API and implementation and/or initial documentation
+ -->
+<!--
+  To execute this build script, you have to configure your environment as follows:
+  - Java property java.home must point to an existent JAVA_HOME (either via parameter 
+    (e.g. antit.bat -Djava.home=C:/Programme/Java15) or create a private.properties file
+    in the etc folder of the project and put the property in there)
+  - you need an Infinity installation or you have to execute at least the latakia build file
+-->
+
+<project name="document-triage" default="build" basedir="." xmlns:ipp="com.infinity.bpm.ant.macros">
+   
+   <property name="project.dir" value="." />
+   <property name="project.src" value="${project.dir}/src/main/java" />
+   <property name="resources.src" value="${project.dir}/src/main/resources" />
+   <property name="project.etc" value="${project.dir}/etc" />
+   <property file="${project.etc}/private.properties"/>
+   
+   <property name="artifactId" value="document-triage" />
+
+   <import file="../../build.tools/commons-build.xml" />
+
+   <target name="initOnDevelopment" if="setup.development">
+      <echo message="Performing a development build ..." />
+
+      <property name="javac.debuglevel" value="lines,source,vars" />
+   </target>
+
+   <target name="initOnProduction" unless="setup.development">
+      <echo message="Performing a production build ..." />
+
+      <property name="javac.debuglevel" value="lines,source,vars" />
+   </target>
+
+   <target name="init" depends="initOnDevelopment, initOnProduction">
+      <property name="build.dir" value="${project.dir}/build"/>
+   </target>
+
+   <target name="clean" depends="init" description="removes all build results">
+      <delete dir="${build.dir}" />
+   </target>
+
+   <target name="initBuild" depends="init">
+      <property name="build.classes" value="${build.dir}/classes" />
+      <property name="build.lib" value="${build.dir}/lib" />
+      <property name="build.src" value="${build.dir}/src" />
+
+      <property name="document.triage.jarfile" value="${artifactId}.jar" />
+      <property name="document.triage.jar" value="${build.lib}/${document.triage.jarfile}" />
+      <property name="document.triage.src.jarfile" value="${artifactId}-sources.jar" />
+      <property name="document.triage.src.jar" value="${build.lib}/${document.triage.src.jarfile}" />
+   </target>
+
+   <target name="initBuildDirectories" depends="initBuild">
+      <mkdir dir="${build.classes}"/>
+      <mkdir dir="${build.lib}"/>
+      <mkdir dir="${build.src}"/>
+   </target>
+
+   <target name="prepareSources" depends="initBuild">
+      <echo message="Preparing sources for a safe but slow build." />
+      <copy todir="${build.src}" overwrite="true">
+         <fileset dir="${project.src}">
+            <include name="**/*.java" />
+         </fileset>
+      </copy>
+   </target>
+   
+   <target name="init.ivy">
+      <echo message="Using Ivy for dependency management." />
+      <init-ivy />
+   </target>
+
+   <target name="initClasspath" depends="init.ivy" >
+
+      <init-ivy-classpath />
+
+      <path id="compile.classpath">
+         <path refid="compile.deps" />
+      </path>
+   </target>
+
+   <target name="compile.jdk16" depends="init" description="Compiling Java 6 code.">
+      <ipp:javac-java6 srcdir="${build.src}" destdir="${build.classes}">
+         <include name="**/*.java" />
+         <classpath id="compile6.classpath">
+            <path refid="compile.classpath" />
+         </classpath>
+      </ipp:javac-java6>
+   </target>
+
+   <target name="compile" depends="prepareSources, initBuildDirectories, initClasspath, compile.jdk16" 
+      description="compiles the portal API classes" unless="skip.compile" />
+   
+   <target name="copyDatFiles" depends="initBuildDirectories">
+      <copy todir="${build.classes}">
+         <fileset dir="${resources.src}">
+            <include name="**/*.*" />
+         </fileset>
+      </copy>
+
+      <copy todir="${build.src}">
+         <fileset dir="${resources.src}">
+            <include name="**/*.*" />
+         </fileset>
+      </copy>
+   </target>
+
+   <target name="jar" depends="compile, copyDatFiles">
+      <ipp:jar jarfile="${document.triage.jar}" implementationTitle="Infinity Process Engine - Document Triage">
+         <fileset dir="${build.classes}">
+            <include name="**/*.*" />
+         </fileset>
+      </ipp:jar>
+   </target>
+
+   <target name="jar.src" depends="compile">
+      <delete file="${document.triage.src.jar}" />
+      <ipp:jar jarfile="${document.triage.src.jar}" implementationTitle="Infinity Process Engine - Document Triage Sources">
+         <fileset dir="${build.src}">
+            <include name="**/*.*" />
+         </fileset>
+      </ipp:jar>
+   </target>
+
+   <target name="build" depends="jar, jar.src, build.ivy" />
+
+   <target name="build.ivy" if="dependencies.mode.ivy"
+      depends="jar, jar.src">
+      
+      <ivy-publish-local artifactId="${artifactId}" artifactDir="${build.lib}" />
+   </target>
+
+   <target name="initPortalWstPluginDir" unless="portal.wst.plugin.dir">
+      <property name="portal.wst.plugin.dir" value="${project.dir}/../../ide.wst/org.eclipse.stardust.ide.wst.facet.portal"/>
+      <available file="${portal.wst.plugin.dir}" property="portal.wst.plugin.dir.present" type="dir"/>
+   </target>
+   
+   <target name="dist" depends="build, initPortalWstPluginDir" if="portal.wst.plugin.dir.present">
+      <copy todir="${portal.wst.plugin.dir}/lib">
+         <fileset dir="${build.lib}">
+            <include name="${document.triage.jarfile}" />
+         </fileset>
+      </copy>
+   </target>
+   
+   <target name="deploy" depends="build,dependencies:report"/>
+
+   <target name="install" if="maven.localRepository" depends="initBuild"
+      description="installs the artifacts into a local Maven repository">
+
+      <ipp:init-mvn localMavenRepository="${maven.localRepository}" />
+      <ipp:mvn-install file="${document.triage.jar}" 
+         pomFile="${build.lib}/${artifactId}.pom" />
+   </target>
+   
+   <target name="publish" depends="initBuild"
+     description="publish artifacts into a remote Maven repository">
+
+      <ipp:init-mvn />
+      <ipp:mvn-deploy file="${document.triage.jar}" 
+         pomFile="${build.lib}/${artifactId}.pom" />
+   </target>
+   
+   <!-- target is invoked by stardust-ui-web-nls project -->
+   <target name="copy-nls-resources" 
+      description="copies the resources into a given folder">
+      <copy todir="${build.nls.dir}">
+         <fileset dir="${resources.src}">
+            <include name="**/*_de.properties"/>
+            <include name="**/*_en.properties"/>
+            <include name="**/*_zh_CN.properties"/>
+         </fileset>
+      </copy>
+   </target>
+
+   <target name="dependencies:report" depends="init,init.ivy">
+      <property name="build.report" location="${build.dir}/report" />
+      <ivy-report ivyFile="${project.dir}/ivy.xml" outputDir="${build.report}" />
+   </target>
+
+</project>
diff --git a/liberty-indexing/pom.xml b/liberty-indexing/pom.xml
new file mode 100644
index 0000000..da168f3
--- /dev/null
+++ b/liberty-indexing/pom.xml
@@ -0,0 +1,115 @@
+<!--
+    Copyright (c) 2011, 2013 SunGard CSA LLC and others.
+    All rights reserved. This program and the accompanying materials
+    are made available under the terms of the Eclipse Public License v1.0
+    which accompanies this distribution, and is available at
+    http://www.eclipse.org/legal/epl-v10.html
+
+    Contributors:
+       SunGard CSA LLC - initial API and implementation and/or initial documentation
+ -->
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+
+   <parent>
+      <groupId>com.infinity.bpm</groupId>
+      <artifactId>product-parent</artifactId>
+      <version>9.9.9-SNAPSHOT</version>
+      <relativePath>../../../sungard/product/product-parent/pom.xml</relativePath>
+   </parent>
+
+	<groupId>org.eclipse.stardust.ui.web</groupId>
+	<artifactId>document-triage</artifactId>
+   <version>0.0.1-SNAPSHOT</version>
+
+	<packaging>jar</packaging>
+
+   <properties>
+      <ipp.version>8.0.0-RC6-SNAPSHOT</ipp.version>
+   </properties>
+
+	<dependencies>
+
+      <dependency>
+         <groupId>org.eclipse.stardust.engine</groupId>
+         <artifactId>carnot-engine</artifactId>
+         <version>${ipp.version}</version>
+         <scope>compile</scope>
+      </dependency>
+
+      <dependency>
+         <groupId>org.eclipse.stardust.engine</groupId>
+         <artifactId>spring-module</artifactId>
+         <version>${ipp.version}</version>
+         <type>pom</type>
+         <scope>compile</scope>
+      </dependency>
+
+      <dependency>
+         <groupId>org.eclipse.stardust.ui.web</groupId>
+         <artifactId>ipp-portal-api</artifactId>
+         <version>${ipp.version}</version>
+         <scope>compile</scope>
+      </dependency>
+
+      <dependency>
+         <groupId>org.eclipse.stardust.ui.web</groupId>
+         <artifactId>ipp-portal-common</artifactId>
+         <version>${ipp.version}</version>
+         <scope>compile</scope>
+      </dependency>
+
+      <dependency>
+         <groupId>org.eclipse.stardust.ui.web</groupId>
+         <artifactId>ipp-workflow-perspective</artifactId>
+         <version>${ipp.version}</version>
+         <scope>compile</scope>
+      </dependency>
+
+      <dependency>
+         <groupId>org.eclipse.stardust.ui.web</groupId>
+         <artifactId>ipp-views-common</artifactId>
+         <version>${ipp.version}</version>
+         <scope>compile</scope>
+      </dependency>
+
+      <dependency>
+      	<groupId>javax.ws.rs</groupId>
+      	<artifactId>jsr311-api</artifactId>
+      	<type>jar</type>
+      	<scope>compile</scope>
+      </dependency>
+      
+      <dependency>
+         <groupId>javax.servlet</groupId>
+         <artifactId>servlet-api</artifactId>
+         <scope>provided</scope>
+      </dependency>
+      
+	</dependencies>
+
+
+   <build>
+      <plugins>
+         <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-compiler-plugin</artifactId>
+            <version>2.3.2</version>
+            <configuration>
+               <encoding>UTF-8</encoding>
+               <source>1.6</source>
+               <target>1.6</target>
+            </configuration>
+         </plugin>
+         <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-resources-plugin</artifactId>
+            <version>2.4.3</version>
+            <configuration>
+               <encoding>UTF-8</encoding>
+            </configuration>
+         </plugin>
+      </plugins>
+   </build>
+</project>
diff --git a/liberty-indexing/sample-documents/3087_001.tif b/liberty-indexing/sample-documents/3087_001.tif
new file mode 100644
index 0000000000000000000000000000000000000000..677894759d2f09c5baf5ab47cd6a06efd9245242
GIT binary patch
literal 42478
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
RCIA1uWR3qW_pjgo^<Sa>ody5^

literal 0
HcmV?d00001

diff --git a/liberty-indexing/sample-documents/Business.pdf b/liberty-indexing/sample-documents/Business.pdf
new file mode 100644
index 0000000000000000000000000000000000000000..8aebe7104260616d557aec54b83ecab845fbe51d
GIT binary patch
literal 124802
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
BSB3xp

literal 0
HcmV?d00001

diff --git a/liberty-indexing/src/main/java/com/sungard/insurance/liberty/indexing/rest/IndexingResource.java b/liberty-indexing/src/main/java/com/sungard/insurance/liberty/indexing/rest/IndexingResource.java
new file mode 100644
index 0000000..28b00a8
--- /dev/null
+++ b/liberty-indexing/src/main/java/com/sungard/insurance/liberty/indexing/rest/IndexingResource.java
@@ -0,0 +1,75 @@
+package com.sungard.insurance.liberty.indexing.rest;
+
+import javax.servlet.ServletContext;
+import javax.servlet.http.HttpServletRequest;
+import javax.ws.rs.Consumes;
+import javax.ws.rs.POST;
+import javax.ws.rs.Path;
+import javax.ws.rs.Produces;
+import javax.ws.rs.core.Context;
+import javax.ws.rs.core.MediaType;
+import javax.ws.rs.core.Response;
+
+import org.eclipse.stardust.common.log.LogManager;
+import org.eclipse.stardust.common.log.Logger;
+
+import com.google.gson.JsonObject;
+import com.sungard.insurance.liberty.indexing.service.IndexingService;
+
+@Path("/")
+public class IndexingResource {
+	private static final Logger trace = LogManager
+			.getLogger(IndexingResource.class);
+	private IndexingService documentTriageService;
+	private final JsonMarshaller jsonIo = new JsonMarshaller();
+
+	@Context
+	private HttpServletRequest httpRequest;
+
+	@Context
+	private ServletContext servletContext;
+
+	/**
+	 * 
+	 * @return
+	 */
+	public IndexingService getIndexingService() {
+		return documentTriageService;
+	}
+
+	@POST
+	@Consumes(MediaType.APPLICATION_JSON)
+	@Produces(MediaType.APPLICATION_JSON)
+	@Path("processes/documentRendezvous.json")
+	public Response getPendingProcesses(String postedData) {
+		try {
+			JsonObject json = jsonIo.readJsonObject(postedData);
+
+			return Response.ok(
+					getIndexingService().getPendingProcesses(json)
+							.toString(), MediaType.APPLICATION_JSON).build();
+		} catch (Exception e) {
+			trace.error(e, e);
+
+			return Response.serverError().build();
+		}
+	}
+
+	@POST
+	@Consumes(MediaType.APPLICATION_JSON)
+	@Produces(MediaType.APPLICATION_JSON)
+	@Path("activities/completeRendezvous.json")
+	public Response completeRendezvous(String postedData) {
+		try {
+			JsonObject json = jsonIo.readJsonObject(postedData);
+
+			return Response.ok(
+					getIndexingService().completeRendezvous(json)
+							.toString(), MediaType.APPLICATION_JSON).build();
+		} catch (Exception e) {
+			trace.error(e, e);
+
+			return Response.serverError().build();
+		}
+	}
+}
diff --git a/liberty-indexing/src/main/java/com/sungard/insurance/liberty/indexing/rest/JsonMarshaller.java b/liberty-indexing/src/main/java/com/sungard/insurance/liberty/indexing/rest/JsonMarshaller.java
new file mode 100644
index 0000000..65973a7
--- /dev/null
+++ b/liberty-indexing/src/main/java/com/sungard/insurance/liberty/indexing/rest/JsonMarshaller.java
@@ -0,0 +1,221 @@
+/*******************************************************************************
+ * Copyright (c) 2013 SunGard CSA LLC and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *    SunGard CSA LLC - initial API and implementation and/or initial documentation
+ *******************************************************************************/
+
+package com.sungard.insurance.liberty.indexing.rest;
+
+import java.lang.reflect.Type;
+import java.util.Map;
+
+import javax.ws.rs.WebApplicationException;
+import javax.ws.rs.core.Response.Status;
+
+import com.google.gson.*;
+
+import org.eclipse.stardust.common.log.LogManager;
+import org.eclipse.stardust.common.log.Logger;
+
+// TODO Reuse already available marshaller; this is copy and paste
+
+public class JsonMarshaller
+{
+   private static final Logger trace = LogManager.getLogger(JsonMarshaller.class);
+
+   private final Gson gson = new GsonBuilder() //
+      .registerTypeAdapter(JsonObject.class, new JsonObjectSerializationHandler())
+      .registerTypeAdapter(JsonArray.class, new JsonArraySerializationHandler())
+      .create();
+
+   private final Gson gsonForUpdates = new GsonBuilder().serializeNulls()
+         .registerTypeAdapter(JsonObject.class, new JsonObjectSerializationHandler())
+         .registerTypeAdapter(JsonArray.class, new JsonArraySerializationHandler())
+         .create();
+
+   private final JsonParser jsonParser = new JsonParser();
+
+   public Gson gson()
+   {
+      return gson;
+   }
+
+   public JsonObject readJsonObject(String jsonText)
+         throws javax.ws.rs.WebApplicationException
+   {
+      try
+      {
+         JsonElement parsedJson = jsonParser.parse(jsonText);
+         if ((null != parsedJson) && parsedJson.isJsonObject())
+         {
+            return parsedJson.getAsJsonObject();
+         }
+         else
+         {
+            trace.warn("Expected a JSON object, but received something else.");
+            throw new WebApplicationException(Status.BAD_REQUEST);
+         }
+      }
+      catch (JsonParseException jpe)
+      {
+         trace.warn("Expected a JSON object, but received no valid JSON at all.", jpe);
+         throw new WebApplicationException(jpe, Status.BAD_REQUEST);
+      }
+   }
+
+   public String writeJsonObject(JsonObject json)
+   {
+      return gson.toJson(json);
+   }
+
+   public void writeIntoJsonObject(JsonObject update, JsonObject master)
+   {
+      // merge
+      mergeUpdate(update, master);
+   }
+
+   public <T> void writeIntoJsonObject(T update, JsonObject master)
+   {
+      // merge
+      mergeUpdate(gsonForUpdates.toJsonTree(update).getAsJsonObject(), master);
+   }
+
+   private void mergeUpdate(JsonObject update, JsonObject master)
+   {
+      for (Map.Entry<String, JsonElement> attr : update.entrySet())
+      {
+         if ((null == attr.getValue()) || attr.getValue().isJsonNull())
+         {
+            // TODO use singleton to reduce memory footprint
+            master.add(attr.getKey(), new JsonNull());
+         }
+
+         assertCompatibility(master.get(attr.getKey()), attr.getValue());
+         if (attr.getValue() instanceof JsonPrimitive)
+         {
+            if (!master.has(attr.getKey()) || !master.get(attr.getKey()).equals(attr.getValue()))
+            {
+               master.add(attr.getKey(), attr.getValue());
+            }
+         }
+         else if (attr.getValue() instanceof JsonObject)
+         {
+            if ( !master.has(attr.getKey()) || master.get(attr.getKey()).isJsonNull())
+            {
+               // copy whole subtree
+               master.add(attr.getKey(), attr.getValue());
+            }
+            else
+            {
+               // recurse to merge attribute updates
+               mergeUpdate(attr.getValue().getAsJsonObject(), master.get(attr.getKey()).getAsJsonObject());
+            }
+         }
+         else if (attr.getValue() instanceof JsonArray)
+         {
+            // TODO any way to correlate elements between arrays? will need concept of
+            // element identity to merge elements
+            master.add(attr.getKey(), attr.getValue());
+         }
+      }
+   }
+
+   private void assertCompatibility(JsonElement master, JsonElement update)
+   {
+      if ((null == update) || update.isJsonNull())
+      {
+         // assume any attribute can be set to null
+      }
+      else if (null != update)
+      {
+         if ((null == master) || master.isJsonNull())
+         {
+            // assume compatibility as null carries no type
+         }
+         else if (update.isJsonPrimitive())
+         {
+            if ( !master.isJsonPrimitive())
+            {
+               throw new IllegalArgumentException(
+                     "Must not structurally change JSON objects (expecting primitive, got " + master + ").");
+            }
+            // TODO further checks for check primitive types?
+         }
+         else if (update.isJsonArray())
+         {
+            if ( !master.isJsonArray())
+            {
+               throw new IllegalArgumentException(
+                     "Must not structurally change JSON objects (expecting array, got " + master + ").");
+            }
+         }
+         else if (update.isJsonObject())
+         {
+            if ( !master.isJsonObject())
+            {
+               throw new IllegalArgumentException(
+                     "Must not structurally change JSON objects (expecting object, got " + master + ").");
+            }
+         }
+      }
+   }
+
+   private static class JsonObjectSerializationHandler
+         implements JsonSerializer<JsonObject>, JsonDeserializer<JsonObject>
+   {
+      @Override
+      public JsonObject serialize(JsonObject src, Type typeOfSrc,
+            JsonSerializationContext context)
+      {
+         // just use the object as is
+         return src;
+      }
+
+      @Override
+      public JsonObject deserialize(JsonElement json, Type typeOfT,
+            JsonDeserializationContext context) throws JsonParseException
+      {
+         if (json.isJsonObject() && JsonObject.class.equals(typeOfT))
+         {
+            // just use the object as is
+            return json.getAsJsonObject();
+         }
+         else
+         {
+            return new JsonObject();
+         }
+      }
+   }
+
+   private static class JsonArraySerializationHandler
+         implements JsonSerializer<JsonArray>, JsonDeserializer<JsonArray>
+   {
+      @Override
+      public JsonArray serialize(JsonArray src, Type typeOfSrc,
+            JsonSerializationContext context)
+      {
+         // just use the object as is
+         return src;
+      }
+
+      @Override
+      public JsonArray deserialize(JsonElement json, Type typeOfT,
+            JsonDeserializationContext context) throws JsonParseException
+      {
+         if (json.isJsonArray() && JsonArray.class.equals(typeOfT))
+         {
+            // just use the object as is
+            return json.getAsJsonArray();
+         }
+         else
+         {
+            return new JsonArray();
+         }
+      }
+   }
+}
diff --git a/liberty-indexing/src/main/java/com/sungard/insurance/liberty/indexing/service/IndexingService.java b/liberty-indexing/src/main/java/com/sungard/insurance/liberty/indexing/service/IndexingService.java
new file mode 100644
index 0000000..11a3939
--- /dev/null
+++ b/liberty-indexing/src/main/java/com/sungard/insurance/liberty/indexing/service/IndexingService.java
@@ -0,0 +1,140 @@
+/*******************************************************************************
+ * Copyright (c) 2013 SunGard CSA LLC and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *    SunGard CSA LLC - initial API and implementation and/or initial documentation
+ *******************************************************************************/
+
+package com.sungard.insurance.liberty.indexing.service;
+
+import javax.annotation.Resource;
+
+import org.eclipse.stardust.common.log.LogManager;
+import org.eclipse.stardust.common.log.Logger;
+import org.eclipse.stardust.engine.api.runtime.AdministrationService;
+import org.eclipse.stardust.engine.api.runtime.DocumentManagementService;
+import org.eclipse.stardust.engine.api.runtime.QueryService;
+import org.eclipse.stardust.engine.api.runtime.ServiceFactory;
+import org.eclipse.stardust.engine.api.runtime.UserService;
+import org.eclipse.stardust.engine.api.runtime.WorkflowService;
+import org.eclipse.stardust.ui.web.viewscommon.beans.SessionContext;
+
+import com.google.gson.JsonArray;
+import com.google.gson.JsonObject;
+import com.sungard.insurance.liberty.indexing.rest.JsonMarshaller;
+
+/**
+ * 
+ * @author marcgille
+ *
+ */
+public class IndexingService {
+	private static final Logger trace = LogManager
+			.getLogger(IndexingService.class);
+	@Resource
+	private SessionContext sessionContext;
+	private DocumentManagementService documentManagementService;
+	private UserService userService;
+	private QueryService queryService;
+	private WorkflowService workflowService;
+	private AdministrationService administrationService;
+
+	public IndexingService() {
+		super();
+
+		new JsonMarshaller();
+	}
+
+	private ServiceFactory getServiceFactory() {
+		return sessionContext.getServiceFactory();
+	}
+
+	/**
+	 * 
+	 * @return
+	 */
+	DocumentManagementService getDocumentManagementService() {
+		if (documentManagementService == null) {
+			documentManagementService = getServiceFactory()
+					.getDocumentManagementService();
+		}
+
+		return documentManagementService;
+	}
+
+	/**
+	 * 
+	 * @return
+	 */
+	private UserService getUserService() {
+		if (userService == null) {
+			userService = getServiceFactory().getUserService();
+		}
+
+		return userService;
+	}
+
+	/**
+	 * 
+	 * @return
+	 */
+	private QueryService getQueryService() {
+		if (queryService == null) {
+			queryService = getServiceFactory().getQueryService();
+		}
+
+		return queryService;
+	}
+
+	/**
+	 * 
+	 * @return
+	 */
+	private WorkflowService getWorkflowService() {
+		if (workflowService == null) {
+			workflowService = getServiceFactory().getWorkflowService();
+		}
+
+		return workflowService;
+	}
+
+	/**
+	 * 
+	 * @return
+	 */
+	private AdministrationService getAdministrationService() {
+		if (administrationService == null) {
+			administrationService = getServiceFactory()
+					.getAdministrationService();
+		}
+
+		return administrationService;
+	}
+
+	/**
+	 * 
+	 * @param json
+	 * @return
+	 */
+	public JsonObject getPendingProcesses(JsonObject json) {
+		JsonObject resultJson = new JsonObject();
+		JsonArray processInstancesJson = new JsonArray();
+
+		resultJson.add("processInstances", processInstancesJson);
+
+		return resultJson;
+	}
+
+	/**
+	 * 
+	 * @param json
+	 * @return
+	 */
+	public JsonObject completeRendezvous(JsonObject json) {
+		return null;
+	}
+}
diff --git a/liberty-indexing/src/main/resources/META-INF/MANIFEST.MF b/liberty-indexing/src/main/resources/META-INF/MANIFEST.MF
new file mode 100644
index 0000000..254272e
--- /dev/null
+++ b/liberty-indexing/src/main/resources/META-INF/MANIFEST.MF
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Class-Path: 
+
diff --git a/liberty-indexing/src/main/resources/META-INF/liberty-indexing.portal-plugin b/liberty-indexing/src/main/resources/META-INF/liberty-indexing.portal-plugin
new file mode 100644
index 0000000..0c38d0a
--- /dev/null
+++ b/liberty-indexing/src/main/resources/META-INF/liberty-indexing.portal-plugin
@@ -0,0 +1 @@
+/META-INF/webapp/
\ No newline at end of file
diff --git a/liberty-indexing/src/main/resources/META-INF/spring/jax-rs-cxf-context.xml b/liberty-indexing/src/main/resources/META-INF/spring/jax-rs-cxf-context.xml
new file mode 100644
index 0000000..d2a650d
--- /dev/null
+++ b/liberty-indexing/src/main/resources/META-INF/spring/jax-rs-cxf-context.xml
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!-- Copyright (c) 2012 SunGard CSA LLC and others. All rights reserved.
+	This program and the accompanying materials are made available under the
+	terms of the Eclipse Public License v1.0 which accompanies this distribution,
+	and is available at http://www.eclipse.org/legal/epl-v10.html Contributors:
+	SunGard CSA LLC - initial API and implementation and/or initial documentation -->
+
+<beans xmlns="http://www.springframework.org/schema/beans"
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
+	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">
+
+	<jaxrs:server id="libertyIndexing" address="/liberty-indexing">
+		<jaxrs:serviceBeans>
+			<ref bean="indexingResource" />
+		</jaxrs:serviceBeans>
+	</jaxrs:server>
+
+	<bean id="indexingResource"
+		class="com.sungard.insurance.liberty.indexing.rest.IndexingResource">
+		<property name="indexingService" ref="indexingService" />
+	</bean>
+
+</beans>
+
diff --git a/liberty-indexing/src/main/resources/META-INF/spring/liberty-indexing-context.xml b/liberty-indexing/src/main/resources/META-INF/spring/liberty-indexing-context.xml
new file mode 100644
index 0000000..dc29ad1
--- /dev/null
+++ b/liberty-indexing/src/main/resources/META-INF/spring/liberty-indexing-context.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
+	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
+	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:ippui="http://infinity.com/bpm/ui/common/uiDefinition"
+	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
+		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
+		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
+		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
+		http://infinity.com/bpm/portal/common/uiDefinition http://infinity.com/bpm/portal/common/uiDefinition.xsd">
+
+	<context:annotation-config />
+	<context:component-scan base-package="com.sungard.insurance.liberty.indexing" />
+
+	<bean id="indexingService"
+		class="com.sungard.insurance.liberty.indexing.service.IndexingService" scope="session">
+		<aop:scoped-proxy/>
+	</bean>
+
+</beans>
diff --git a/liberty-indexing/src/main/resources/META-INF/webapp/indexingPanel.html b/liberty-indexing/src/main/resources/META-INF/webapp/indexingPanel.html
new file mode 100644
index 0000000..017602a
--- /dev/null
+++ b/liberty-indexing/src/main/resources/META-INF/webapp/indexingPanel.html
@@ -0,0 +1,319 @@
+<html>
+<head>
+<link
+	href='http://fonts.googleapis.com/css?family=Lato:400,700,300italic,400italic'
+	rel='stylesheet' type='text/css'>
+<link href="../document-triage/css/font-awesome-4.1.0/css/font-awesome.css"
+	rel="stylesheet">
+<link href='../document-triage/css/stardust-modern.css' rel='stylesheet' />
+<link href='../document-triage/css/thirdparty/jquery/jquery-ui-1.10.2.custom.min.css'
+	rel='stylesheet' />
+<script data-main="./js/IndexingPanelMain"
+	src="./js/libs/require/2.0.5/require-min.js"></script>
+<style>
+.section {
+	border: 1px solid #e0e0e0;
+}
+
+.scannedDocument td {
+	border-bottom: 1px dashed #dddddd;
+	background-color: #E8E6FC;
+}
+
+.page:hover {
+	cursor: move;
+}
+
+.pendingProcessesTree td {
+	padding: 3px !important;
+}
+
+.pendingProcessesTree i {
+	color: #A69A88;
+}
+
+.selected {
+	background-color: #dddddd;
+}
+
+.selected td {
+	background-color: #dddddd;
+}
+
+.highlighted td {
+	background-color: #E8E6FC;
+}
+
+.dragHelper {
+	font-size: 11px;
+	color: black;
+	background-color: white !important;
+}
+
+.normalLine {
+	margin-bottom: 2px;
+	padding-bottom: 3px;
+}
+
+.cutLine {
+	width: 100%;
+	padding-bottom: 2px;
+	border-bottom: 1px dashed #AAAAAA;
+	margin-bottom: 2px;
+	padding-bottom: 2px;
+}
+
+.pendingProcessesTree td {
+	padding: 0 !important;
+	margin: 0 !important;
+}
+
+.pendingProcessesTree td>div {
+	padding: 3px !important;
+}
+
+.cutLine:hover {
+	background-color: #dddddd;
+}
+</style>
+</head>
+<body>
+	<div ng-controller="indexingPanelController">
+		<table class="layoutTable" style="width: 100%; height: 100%">
+			<tr valign="top">
+				<td>
+					<table class="layoutTable" style="width: 100%;">
+						<tr>
+							<td>
+							</td>
+						</tr>
+						<tr valign="top">
+							<td>
+								<table style="width: 100%;">
+									<tr valign="top">
+
+
+										<td style="width: 50%;">
+											<table class="toolbar" style="width: 100%;">
+												<tr>
+													<td><table class="formTable">
+															<tr>
+																<td><a href="#" class="iconLink"
+																	ng-click="rotatePage()"><i
+																		class="fa fa-rotate-right"></i></a></td>
+																<td><input type="number" style="text-align: right;"
+																	ng-model="zoomFactor"></input> <label>%</label></td>
+																<td><a href="#" class="iconLink"
+																	ng-click="zoomInPage()"><i
+																		class="fa fa-plus-circle"></i></a></td>
+																<td><a href="#" class="iconLink"
+																	ng-click="zoomOutPage()"><i
+																		class="fa fa-minus-circle"></i></a></td>
+																<td><a href="#" class="iconLink"
+																	ng-click="invertPage()"><i
+																		class="fa fa-star-half-o"></i></a></td>
+															</tr>
+														</table></td>
+												</tr>
+											</table>
+											<div class="section"
+												style="height: 400px; overflow: auto; margin-top: 10px; margin-bottom: 10px; max-width: 800px;">
+												<img id="pageImage" src={{selectedPage.url}}
+													ng-show="selectedPage != null" />
+											</div>
+										</td>
+										<td style="width: 50%; padding-left: 10px !important;">
+											<h2>Pending Processes and Activities</h2>
+											<div class="section"
+												style="min-height: 20px; max-height: 250px; overflow: auto; margin-top: 10px; margin-bottom: 10px;">
+												<table cellpadding="0" cellspacing="0"
+													class="pendingProcessesTree">
+													<tr ng-repeat="treeItem in pendingProcessesTree"
+														id="pendingProcessesTreeRow{{$index}}"
+														class="{{getTreeItemClass(treeItem)}}">
+														<td>
+															<div ng-show="treeItem.pendingProcess">
+																<i class="fa fa-gears"></i>
+															</div>
+															<div style="margin-left: 10px;"
+																ng-show="treeItem.pendingProcess.descriptors.length >0">
+																<i class="fa fa-tag"></i>
+															</div>
+															<div ng-show="treeItem.pendingActivityInstance"
+																style="margin-left: 10px;">
+																<i class="fa fa-gear"></i>
+															</div>
+															<div ng-show="treeItem.specificDocument"
+																style="margin-left: 10px;">
+																<span ng-hide="treeItem.specificDocument.url"><i
+																	class="fa fa-file-o"></i></span> <span
+																	ng-show="treeItem.specificDocument.url"><i
+																	class="fa fa-file"></i></span>
+															</div>
+															<div ng-show="treeItem.processAttachments != null"
+																style="margin-left: 10px;">
+																<i class="fa fa-folder-o"></i>
+															</div>
+															<div ng-show="treeItem.processAttachment"
+																style="margin-left: 20px;">
+																<i class="fa fa-file"></i>
+															</div>
+														</td>
+														<td><div ng-show="treeItem.pendingProcess">{{treeItem.pendingProcess.processDefinition.name}}
+																(#{{treeItem.pendingProcess.oid}})
+																{{$parent.formatTimestamp(treeItem.pendingProcess.start)}}</div>
+															<div
+																ng-show="treeItem.pendingProcess.descriptors.length >0">
+																Descriptors- <span
+																	ng-repeat="item in treeItem.pendingProcess.descriptors">
+																	<span ng-if="item.value != ''">{{item.name}}:{{item.value}}</span>
+																	<span ng-if="!$last && item.value != ''">, </span>
+																</span>
+															</div>
+															<div ng-show="treeItem.pendingActivityInstance">{{treeItem.pendingActivityInstance.activity.name}}
+																(#{{treeItem.pendingActivityInstance.oid}})
+																{{$parent.formatTimestamp(treeItem.pendingActivityInstance.start)}}</div>
+															<div ng-show="treeItem.specificDocument">
+																{{treeItem.specificDocument.name}} <span
+																	ng-show="treeItem.specificDocument.url">({{$parent.formatTimestamp(treeItem.specificDocument.creationTimestamp)}})</span>
+															</div>
+															<div ng-show="treeItem.processAttachments">Process
+																Attachments</div>
+															<div ng-show="treeItem.processAttachment">{{treeItem.processAttachment.type}}
+																({{$parent.formatTimestamp(treeItem.processAttachment.creationTimestamp)}})</div>
+														</td>
+													</tr>
+												</table>
+											</div>
+											<h2>Startable Processes</h2>
+											<div class="section"
+												style="min-height: 20px; max-height: 150px; overflow: auto; margin-top: 10px; margin-bottom: 10px;">
+												<table cellpadding="0" cellspacing="0"
+													class="pendingProcessesTree">
+													<tr ng-class="{treeBranch:treeItem.startableProcess}"
+														ng-repeat="treeItem in startableProcessesTree"
+														id="startableProcessesTreeRow{{$index}}"
+														class="{{getTreeItemClass(treeItem)}}">
+														<td><div ng-show="treeItem.startableProcess">
+																<i class="fa fa-gears"></i>
+															</div>
+															<div ng-show="treeItem.specificDocument"
+																style="margin-left: 10px;">
+																<i class="fa fa-file-o"></i>
+															</div>
+															<div ng-show="treeItem.processAttachments.length >=0"
+																style="margin-left: 10px;">
+																<i class="fa fa-folder-o"></i>
+															</div></td>
+														<td>
+															<div ng-show="treeItem.startableProcess">{{treeItem.startableProcess.name}}</div>
+															<div ng-show="treeItem.specificDocument">
+																{{treeItem.specificDocument.name}}</div>
+
+															<div ng-show="treeItem.processAttachments.length >=0">Process
+																Attachments</div>
+															<div ng-show="treeItem.processAttachment"
+																xstyle="margin-left: 10px;">
+																<i class="fa fa-file"></i>
+																{{treeItem.processAttachment.type}}
+																{{treeItem.processAttachment.name}}
+																({{$parent.formatTimestamp(treeItem.processAttachment.creationTimestamp)}})
+															</div>
+
+
+														</td>
+														<td
+															ng-if="treeItem.startableProcess && selectedBusinessObjects.length >0 && treeItem.startableProcess.processAttachments.length > 0">
+															<a class="iconLink" href="#"><i
+																ng-click="startProcess(treeItem,selectedBusinessObjects)"
+																class="fa fa-rocket"></i></a>
+														</td>
+													</tr>
+												</table>
+											</div>
+										</td>
+									</tr>
+								</table>
+							</td>
+						</tr>
+					</table>
+				</td>
+				<td style="width: 200px;">
+					<table class="toolbar" style="width: 100%;">
+						<tr>
+							<td><table class="formTable">
+									<tr>
+										<td><a href="#" class="iconLink" ng-click="mode = 'cut'"
+											ng-show="mode == 'normal'"><i class="fa fa-cut"></i></a><a
+											href="#" class="iconLink" ng-click="mode = 'normal'"
+											ng-show="mode == 'cut'"><i class="fa fa-reply"></i></a></td>
+									</tr>
+								</table></td>
+						</tr>
+					</table>
+					<div class="section"
+						style="width: 100%; height: 500px; overflow: auto; margin: 10px;">
+						<table cellpadding="0" cellspacing="0" style="width: 100%;">
+							<tr ng-repeat="document in scannedDocuments"
+								id="scannedDocumentDivision{{$index}}" class="scannedDocument">
+								<td>
+									<table class="formTable">
+										<tr>
+											<td><span style="font-size: 9px;">{{document.name}}
+													{{$parent.formatTimestamp(document.creationTimestamp)}}
+													{{document.contentType}}</span></td>
+										</tr>
+										<tr>
+											<td ng-if="0"><select ng-model="document.type"><option>Select
+														Document Type ...</option>
+													<option value="Birth Certificate">Birth
+														Certificate</option></select></td>
+										</tr>
+									</table>
+									<div ng-repeat="page in document.pages" class="page">
+										<table class="{{$parent.$parent.selectionClass(page)}}">
+											<tr>
+												<td align="right">{{page.number}}</td>
+												<td><a
+													ng-click="$parent.$parent.selectPage(page,document.url + $index)">
+														<img src="{{document.url + $index}}" width="40%" />
+												</a></td>
+											</tr>
+										</table>
+										<div class="normalLine" ng-show="mode == 'normal'"></div>
+										<div class="cutLine" ng-show="mode == 'cut'"></div>
+									</div>
+									<div style="height: 5px; background-color: white;"></div>
+								</td>
+							</tr>
+						</table>
+					</div>
+				</td>
+			</tr>
+		</table>
+		<div sd-dialog="startProcessDialog" style="visibility: hidden;">
+			<table cellpadding="0" cellspacing="0"
+				style="width: 100%; margin-top: 10px;">
+				<tr>
+					<td>The process <strong>{{startProcessDialog.startableProcess.name}}</strong>
+						was started with the selected document.
+					</td>
+				</tr>
+			</table>
+			<table cellpadding="0" cellspacing="0"
+				style="width: 100%; margin-top: 10px;">
+				<tr>
+					<td align="center">
+						<table cellpadding="0" cellspacing="0">
+							<tr>
+								<td><input type="button" class="button" value="Close"
+									ng-click="closeStartProcessDialog()" /></td>
+							</tr>
+						</table>
+					</td>
+				</tr>
+			</table>
+		</div>
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/liberty-indexing/src/main/resources/META-INF/webapp/js/IndexingPanelController.js b/liberty-indexing/src/main/resources/META-INF/webapp/js/IndexingPanelController.js
new file mode 100644
index 0000000..5c9ae43
--- /dev/null
+++ b/liberty-indexing/src/main/resources/META-INF/webapp/js/IndexingPanelController.js
@@ -0,0 +1,157 @@
+define(
+		[ "document-triage/js/Utils",
+				"document-triage/js/DocumentAssignmentPanelController",
+				"document-triage/js/DocumentAssignmentService",
+				"liberty-indexing/js/IndexingService" ],
+		function(Utils, DocumentAssignmentPanelController,
+				DocumentAssignmentService, IndexingService) {
+			return {
+				create : function() {
+					var controller = new IndexingPanelController();
+
+					// Inheritance
+
+					Utils.inheritMethods(controller,
+							DocumentAssignmentPanelController.create());
+
+					return controller;
+				}
+			};
+
+			/**
+			 * 
+			 */
+			function IndexingPanelController() {
+				/**
+				 * 
+				 */
+				IndexingPanelController.prototype.initialize = function() {
+					this.queryParameters = Utils.getQueryParameters();
+
+					// TODO Standardized API
+					// TODO: retrieve a proper base url and replace pepper-test
+					var pattern = "/services/rest/engine/interactions/";
+					var encodedId = this.queryParameters["ippInteractionUri"]
+							.substring(this.queryParameters["ippInteractionUri"]
+									.indexOf(pattern)
+									+ pattern.length);
+					var decodedId = atob(encodedId || '');
+					var partsMatcher = new RegExp('^(\\d+)\\|(\\d+)$');
+					var decodedParts = partsMatcher.exec(decodedId);
+
+					this.activityInstanceOid = decodedParts[1];
+					this.startProcessDialog = {};
+					this.businessObjectFilter = {};
+					this.selectedBusinessObjectInstances = [];
+					this.mode = "normal";
+					this.pageRotation = 0;
+					this.zoomFactor = 100;
+					this.pageInverted = false;
+
+					var self = this;
+
+					DocumentAssignmentService
+							.instance()
+							.getScannedDocuments(this.activityInstanceOid)
+							.done(
+									function(scannedDocuments) {
+										self.scannedDocuments = scannedDocuments;
+
+										self.refreshPagesList();
+
+										DocumentAssignmentService
+												.instance()
+												.getStartableProcesses()
+												.done(
+														function(
+																startableProcesses) {
+															self.startableProcesses = startableProcesses;
+															self
+																	.refreshStartableProcessesTree();
+
+															self.safeApply();
+
+															window
+																	.setTimeout(
+																			function() {
+																				self
+																						.bindDragAndDrop();
+																			},
+																			1000);
+														}).fail();
+
+									}).fail();
+				};
+
+				/**
+				 * 
+				 */
+				IndexingPanelController.prototype.refreshPendingProcessesTree = function() {
+					this.pendingProcessesTree = [];
+
+					for (var n = 0; n < this.pendingProcesses.length; ++n) {
+						this.pendingProcessesTree.push({
+							pendingProcess : this.pendingProcesses[n]
+						});
+
+						for (var m = 0; m < this.pendingProcesses[n].descriptors.length; ++m) {
+							this.pendingProcessesTree
+									.push({
+										processDescriptor : this.pendingProcesses[n].descriptors[m]
+									});
+						}
+
+						for (m = 0; m < this.pendingProcesses[n].pendingActivityInstances.length; ++m) {
+							this.pendingProcessesTree
+									.push({
+										pendingActivityInstance : this.pendingProcesses[n].pendingActivityInstances[m]
+									});
+						}
+
+						for (m = 0; m < this.pendingProcesses[n].specificDocuments.length; ++m) {
+							this.pendingProcessesTree
+									.push({
+										specificDocument : this.pendingProcesses[n].specificDocuments[m]
+									});
+						}
+
+						// this.pendingProcessesTree.push({processDescriptors:this.pendingProcesses[n].descriptors});
+						this.pendingProcessesTree
+								.push({
+									processAttachments : this.pendingProcesses[n].processAttachments
+								});
+
+						for (m = 0; m < this.pendingProcesses[n].processAttachments.length; ++m) {
+							this.pendingProcessesTree
+									.push({
+										processAttachment : this.pendingProcesses[n].processAttachments[m]
+									});
+						}
+					}
+				};
+
+				/**
+				 * 
+				 */
+				IndexingPanelController.prototype.filterBusinessObjectInstances = function() {
+					var self = this;
+
+					DocumentAssignmentService
+							.instance()
+							.getBusinessObjectInstances(
+									this.businessObject.modelOid,
+									this.businessObject.businessObject.id,
+									this.primaryKeyField, this.keyFields)
+							.done(
+									function(businessObjectInstances) {
+										self.businessObjectInstances = businessObjectInstances;
+
+										console.log("Instances here");
+										console
+												.log(self.businessObjectInstances);
+
+										self.safeApply();
+									}).fail();
+				};
+			}
+		});
diff --git a/liberty-indexing/src/main/resources/META-INF/webapp/js/IndexingPanelMain.js b/liberty-indexing/src/main/resources/META-INF/webapp/js/IndexingPanelMain.js
new file mode 100644
index 0000000..6398494
--- /dev/null
+++ b/liberty-indexing/src/main/resources/META-INF/webapp/js/IndexingPanelMain.js
@@ -0,0 +1,45 @@
+require
+		.config({
+			baseUrl : "../",
+			paths : {
+				'jquery' : [ 'document-triage/js/libs/jquery/jquery-1.11.0.min' ],
+				'jquery-ui' : [ 'document-triage/js/libs/jquery/plugins/jquery-ui-1.10.2.custom.min' ],
+				'angularjs' : [ 'document-triage/js/libs/angular/angular-1.2.0' ],
+				'jquery.dataTables' : [ "document-triage/js/libs/jquery/plugins/jquery.dataTables-1.9.4.min" ],
+			},
+			shim : {
+				'jquery-ui' : [ 'jquery' ],
+				'angularjs' : {
+					require : "jquery",
+					exports : "angular"
+				},
+				'jquery.dataTables' : [ 'jquery' ],
+			}
+		});
+
+require([ "require", "jquery", "jquery-ui", "angularjs", "jquery.dataTables",
+		"document-triage/js/Utils", "document-triage/js/AngularDirectives",
+		"liberty-indexing/js/IndexingPanelController" ], function(
+		require, jquery, jqueryUi, angularjs, jqueryDataTables, Utils,
+		AngularDirectives, IndexingPanelController) {
+	jQuery(document).ready(
+			function() {
+				var module = angularjs.module(
+						"indexingPanelApplication", []);
+
+				module
+						.controller('indexingPanelController',
+								function($scope) {
+									console.log($scope);
+
+									Utils.inheritMethods($scope,
+											IndexingPanelController
+													.create());
+
+									$scope.initialize();
+								});
+				AngularDirectives.initialize(module);
+				angular.bootstrap(document,
+						[ "indexingPanelApplication" ]);
+			});
+});
diff --git a/liberty-indexing/src/main/resources/META-INF/webapp/js/IndexingService.js b/liberty-indexing/src/main/resources/META-INF/webapp/js/IndexingService.js
new file mode 100644
index 0000000..c4c83fa
--- /dev/null
+++ b/liberty-indexing/src/main/resources/META-INF/webapp/js/IndexingService.js
@@ -0,0 +1,300 @@
+define(
+		[ "document-triage/js/Utils" ],
+		function(Utils) {
+			return {
+				instance : function() {
+
+					if (!document.documentAssignmentService) {
+						document.documentAssignmentService = new DocumentAssignmentService();
+					}
+
+					return document.documentAssignmentService;
+				}
+			};
+
+			/**
+			 * 
+			 */
+			function DocumentAssignmentService() {
+
+				/**
+				 * 
+				 */
+				DocumentAssignmentService.prototype.initialize = function() {
+				};
+
+				/**
+				 * 
+				 */
+				DocumentAssignmentService.prototype.getBusinessObjects = function() {
+					var deferred = jQuery.Deferred();
+					var rootUrl = location.href.substring(0, location.href
+							.indexOf("/plugins"));
+					var self = this;
+
+					jQuery
+							.ajax(
+									{
+										url : rootUrl
+												+ "/services/rest/document-triage/businessObject.json",
+										type : "GET",
+										contentType : "application/json"
+									}).done(function(result) {
+								console.log("=======> Models");
+								console.log(result.models);
+
+								deferred.resolve(result.models);
+							}).fail(function(data) {
+								deferred.reject(data);
+							});
+
+					return deferred.promise();
+				};
+
+				/**
+				 * 
+				 */
+				DocumentAssignmentService.prototype.getScannedDocuments = function(
+						activityInstanceOid) {
+					var deferred = jQuery.Deferred();
+					var rootUrl = location.href.substring(0, location.href
+							.indexOf("/plugins"));
+					var self = this;
+
+					jQuery
+							.ajax(
+									{
+										url : rootUrl
+												+ "/services/rest/document-triage/activities/"
+												+ activityInstanceOid
+												+ "/attachments.json",
+										type : "GET",
+										contentType : "application/json"
+									})
+							.done(
+									function(result) {
+										console.log("Process Attachments");
+										console.log(result);
+
+										for (var n = 0; n < result.processAttachments.length; ++n) {
+											result.processAttachments[n].creationTimestamp = new Date()
+													.getTime();
+											result.processAttachments[n].pageCount = result.processAttachments[n].numPages;
+											result.processAttachments[n].url = rootUrl
+													+ "/services/rest/document-triage/documents/"
+													+ result.processAttachments[n].uuid
+													+ "/";
+										}
+
+										deferred
+												.resolve(result.processAttachments);
+									}).fail(function(data) {
+								deferred.reject(data);
+							});
+
+					return deferred.promise();
+				};
+
+				/**
+				 * 
+				 */
+				DocumentAssignmentService.prototype.getPendingProcesses = function() {
+					var deferred = jQuery.Deferred();
+					var rootUrl = location.href.substring(0, location.href
+							.indexOf("/plugins"));
+					var self = this;
+
+					jQuery
+							.ajax(
+									{
+										url : rootUrl
+												+ "/services/rest/document-triage/processes/documentRendezvous.json",
+										type : "POST",
+										contentType : "application/json",
+										data : JSON.stringify({})
+									}).done(function(result) {
+								console.log("Result");
+								console.log(result.processInstances);
+
+								deferred.resolve(result.processInstances);
+							}).fail(function(data) {
+								deferred.reject(data);
+							});
+
+					return deferred.promise();
+				};
+
+				/**
+				 * 
+				 */
+				DocumentAssignmentService.prototype.completeDocumentRendezvous = function(
+						pendingActivityInstance, document) {
+					var deferred = jQuery.Deferred();
+					var rootUrl = location.href.substring(0, location.href
+							.indexOf("/plugins"));
+					var self = this;
+
+					jQuery
+							.ajax(
+									{
+										url : rootUrl
+												+ "/services/rest/document-triage/activities/completeRendezvous.json",
+										type : "POST",
+										contentType : "application/json",
+										data : JSON
+												.stringify({
+													pendingActivityInstance : pendingActivityInstance,
+													document : document
+												})
+									}).done(function(result) {
+								deferred.resolve(result.processInstances);
+							}).fail(function(data) {
+								deferred.reject(data);
+							});
+
+					return deferred.promise();
+				};
+				/**
+				 * 
+				 */
+				DocumentAssignmentService.prototype.getStartableProcesses = function() {
+					var deferred = jQuery.Deferred();
+					var rootUrl = location.href.substring(0, location.href
+							.indexOf("/plugins"));
+					var self = this;
+
+					jQuery
+							.ajax(
+									{
+										url : rootUrl
+												+ "/services/rest/document-triage/processes/startable.json",
+										type : "GET",
+										contentType : "application/json"
+									}).done(function(result) {
+								deferred.resolve(result.processDefinitions);
+							}).fail(function(data) {
+								deferred.reject(data);
+							});
+
+					return deferred.promise();
+				};
+
+				/**
+				 * 
+				 */
+				DocumentAssignmentService.prototype.getBusinessObjectInstances = function(
+						modelOid, businessObjectId, primaryKeyField, keyFields) {
+					var queryString = "?";
+
+					if (primaryKeyField && primaryKeyField.filterValue) {
+						queryString += primaryKeyField.id;
+						queryString += "=";
+						queryString += primaryKeyField.filterValue;
+						queryString += "&";
+
+					}
+
+					if (keyFields) {
+						for (var n = 0; n < keyFields.length; ++n) {
+							if (keyFields[n].filterValue) {
+								queryString += keyFields[n].id;
+								queryString += "=";
+								queryString += keyFields[n].filterValue;
+								queryString += "&";
+
+							}
+						}
+					}
+
+					console.log("Filter String");
+					console.log(queryString);
+
+					var deferred = jQuery.Deferred();
+					var rootUrl = location.href.substring(0, location.href
+							.indexOf("/plugins"));
+					var self = this;
+
+					jQuery
+							.ajax(
+									{
+										url : rootUrl
+												+ "/services/rest/document-triage/businessObject/"
+												+ modelOid + "/"
+												+ businessObjectId
+												+ "/instances.json",
+										type : "GET",
+										contentType : "application/json"
+									})
+							.done(
+									function(result) {
+										deferred
+												.resolve(result.businessObjectInstances);
+									}).fail(function(data) {
+								deferred.reject(data);
+							});
+
+					return deferred.promise();
+				};
+
+				/**
+				 * 
+				 */
+				DocumentAssignmentService.prototype.startProcess = function(
+						data) {
+					var deferred = jQuery.Deferred();
+					var rootUrl = location.href.substring(0, location.href
+							.indexOf("/plugins"));
+					var self = this;
+
+					jQuery
+							.ajax(
+									{
+										"url" : rootUrl
+												+ "/services/rest/document-triage/processes.json",
+										"type" : "PUT",
+										"contentType" : "application/json",
+										"data" : JSON.stringify(data)
+									}).done(function(result) {
+								deferred.resolve(result);
+							}).fail(function(data) {
+								deferred.reject(data);
+							});
+
+					return deferred.promise();
+				};
+
+				/**
+				 * 
+				 */
+				DocumentAssignmentService.prototype.addProcessAttachment = function() {
+					var deferred = jQuery.Deferred();
+
+					this.delayedResolve(deferred, null);
+
+					return deferred.promise();
+				};
+
+				/**
+				 * Simulates a delay to test asynchronous behavior and server
+				 * roundtrips.
+				 */
+				DocumentAssignmentService.prototype.delayedResolve = function(
+						deferred, data) {
+					window.setTimeout(function() {
+						deferred.resolve(data);
+					}, 500);
+				};
+
+				/**
+				 * Simulates a delay to test asynchronous behavior and server
+				 * roundtrips.
+				 */
+				DocumentAssignmentService.prototype.delayedReject = function(
+						deferred, data) {
+					window.setTimeout(function() {
+						deferred.reject(data);
+					}, 500);
+				};
+
+			}
+		});
-- 
1.9.4.msysgit.0

