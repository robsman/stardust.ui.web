From db7c880830b9709f05c0bdd06c250ce10282b413 Mon Sep 17 00:00:00 2001
From: "Gille, Marc" <Marc.Gille@sungard.com>
Date: Wed, 2 Jul 2014 13:23:15 -0400
Subject: [PATCH 1/6] Div calandar changes.

---
 .../META-INF/webapp/css/stardust-modern.css        |   6 +-
 .../service/BusinessCalendarService.java           |  73 +-----
 .../service/rest/BusinessCalendarResource.java     |   7 +-
 .../META-INF/webapp/fundCalendarEntryDialog.html   |   1 -
 .../js/BusinessCalendarManagementController.js     |   4 +-
 .../META-INF/webapp/js/BusinessCalendarPlugin.js   | 127 +++++-----
 .../webapp/js/BusinessCalendarPluginManager.js     |   3 +-
 .../webapp/js/BusinessCalendarViewController.js    | 265 ++++++++++++++++-----
 .../webapp/js/FundProcessingCalendarPlugin.js      |  47 ++--
 .../META-INF/webapp/js/ProcessingCalendarPlugin.js |  93 +++++---
 .../META-INF/webapp/js/RegionalCalendarPlugin.js   |  50 ++--
 .../META-INF/webapp/js/UserCalendarPlugin.js       | 112 ++++++---
 .../webapp/processingCalendarEntryDialog.html      |  31 +++
 .../META-INF/webapp/processingCalendarHeader.html  |  29 +++
 .../webapp/regionalCalendarEntryDialog.html        |  40 +++-
 .../META-INF/webapp/regionalCalendarHeader.html    |  21 ++
 .../META-INF/webapp/userCalendarEntryDialog.html   |  72 +++++-
 .../META-INF/webapp/userCalendarHeader.html        |  29 +++
 .../webapp/views/businessCalendarView.html         | 110 +--------
 19 files changed, 702 insertions(+), 418 deletions(-)
 delete mode 100644 stardust-business-calendar/src/main/resources/META-INF/webapp/fundCalendarEntryDialog.html
 create mode 100644 stardust-business-calendar/src/main/resources/META-INF/webapp/processingCalendarEntryDialog.html
 create mode 100644 stardust-business-calendar/src/main/resources/META-INF/webapp/processingCalendarHeader.html
 create mode 100644 stardust-business-calendar/src/main/resources/META-INF/webapp/regionalCalendarHeader.html
 create mode 100644 stardust-business-calendar/src/main/resources/META-INF/webapp/userCalendarHeader.html

diff --git a/checklist-management/src/main/resources/META-INF/webapp/css/stardust-modern.css b/checklist-management/src/main/resources/META-INF/webapp/css/stardust-modern.css
index 5a10b9d..55cf337 100644
--- a/checklist-management/src/main/resources/META-INF/webapp/css/stardust-modern.css
+++ b/checklist-management/src/main/resources/META-INF/webapp/css/stardust-modern.css
@@ -149,10 +149,10 @@ input[type=button]:active {
 }
 
 input[type=button]:disabled {
-	background-color: white;
+	background-color: white !important;
 	border: 1px solid #BBBBBB !important;
-	color: #BBBBBB;
-	cursor: default;
+	color: #BBBBBB !important;
+	cursor: default !important;
 }
 
 .primaryButton {
diff --git a/stardust-business-calendar/src/main/java/org/eclipse/stardust/ui/web/business_calendar/service/BusinessCalendarService.java b/stardust-business-calendar/src/main/java/org/eclipse/stardust/ui/web/business_calendar/service/BusinessCalendarService.java
index 8fb5b01..78bd4c0 100644
--- a/stardust-business-calendar/src/main/java/org/eclipse/stardust/ui/web/business_calendar/service/BusinessCalendarService.java
+++ b/stardust-business-calendar/src/main/java/org/eclipse/stardust/ui/web/business_calendar/service/BusinessCalendarService.java
@@ -131,7 +131,7 @@ public class BusinessCalendarService {
 	 * 
 	 * @return
 	 */
-	public JsonObject getUserCalendars() {
+	public JsonObject getUserEvents() {
 		System.out.println("====> User "
 				+ getWorkflowService().getUser().getAccount());
 
@@ -139,9 +139,9 @@ public class BusinessCalendarService {
 
 		// Get user calendar
 
-		JsonArray singleEvents = new JsonArray();
+		JsonArray events = new JsonArray();
 
-		result.add("singleEvents", singleEvents);
+		result.add("events", events);
 
 		// Get historical user entries
 
@@ -158,8 +158,9 @@ public class BusinessCalendarService {
 			event.addProperty("end", activityInstance.getLastModificationTime()
 					.getTime());
 			event.addProperty("type", "pastEvent");
+			event.addProperty("occurence", "single");
 
-			singleEvents.add(event);
+			events.add(event);
 		}
 
 		WorklistQuery worklistQuery = WorklistQuery.findPrivateWorklist();
@@ -177,71 +178,13 @@ public class BusinessCalendarService {
 			event.addProperty("start", time);
 			event.addProperty("end", time + hours2);
 			event.addProperty("type", "futureEvent");
+			event.addProperty("occurence", "single");
 
 			time += hours2;
 
-			singleEvents.add(event);
+			events.add(event);
 		}
-
-		// try {
-		// JsonObject resultJson = new JsonObject();
-		// JsonObject processesJson = new JsonObject();
-		// JsonObject descriptorsJson = new JsonObject();
-		//
-		// resultJson.add("processDefinitions", processesJson);
-		// resultJson.add("descriptors", descriptorsJson);
-		//
-		// // Ensures uniqueness of descriptor entries across all Process
-		// // Definitions
-		//
-		// Map<String, Object> descriptorsMap = new HashMap<String, Object>();
-		//
-		// for (ProcessDefinition processDefinition : getQueryService()
-		// .getAllProcessDefinitions()) {
-		// JsonObject processJson = new JsonObject();
-		//
-		// processJson.addProperty("id", processDefinition.getId());
-		// processJson.addProperty("name", processDefinition.getName());
-		//
-		// processesJson.add(processDefinition.getId(), processJson);
-		//
-		// for (DataPath dataPath : (List<DataPath>) processDefinition
-		// .getAllDataPaths()) {
-		// if (dataPath.isDescriptor()) {
-		// if (!descriptorsMap.containsKey(dataPath.getId())) {
-		// JsonObject descriptorJson = new JsonObject();
-		//
-		// descriptorsJson.add(dataPath.getId(),
-		// descriptorJson);
-		//
-		// descriptorJson.addProperty("id", dataPath.getId());
-		// descriptorJson.addProperty("name",
-		// dataPath.getName());
-		// descriptorJson.addProperty("type", dataPath
-		// .getMappedType().getSimpleName());
-		// descriptorsMap.put(dataPath.getId(), dataPath);
-		// }
-		// }
-		// }
-		// }
-		//
-		// JsonObject participantsJson = new JsonObject();
-		//
-		// resultJson.add("participants", participantsJson);
-		//
-		// for (Participant participant : getQueryService()
-		// .getAllParticipants()) {
-		// JsonObject participantJson = new JsonObject();
-		//
-		// participantJson.addProperty("id", participant.getId());
-		// participantJson.addProperty("name", participant.getName());
-		//
-		// participantsJson.add(participant.getId(), participantJson);
-		// }
-		//
-		// return resultJson;
-		// } finally {
-		// }
+		
 		return result;
 	}
 
diff --git a/stardust-business-calendar/src/main/java/org/eclipse/stardust/ui/web/business_calendar/service/rest/BusinessCalendarResource.java b/stardust-business-calendar/src/main/java/org/eclipse/stardust/ui/web/business_calendar/service/rest/BusinessCalendarResource.java
index c511a57..01f93f7 100644
--- a/stardust-business-calendar/src/main/java/org/eclipse/stardust/ui/web/business_calendar/service/rest/BusinessCalendarResource.java
+++ b/stardust-business-calendar/src/main/java/org/eclipse/stardust/ui/web/business_calendar/service/rest/BusinessCalendarResource.java
@@ -15,6 +15,7 @@ import javax.ws.rs.PUT;
 import javax.ws.rs.Path;
 import javax.ws.rs.PathParam;
 import javax.ws.rs.Produces;
+import javax.ws.rs.QueryParam;
 import javax.ws.rs.core.Context;
 import javax.ws.rs.core.MediaType;
 import javax.ws.rs.core.Response;
@@ -69,11 +70,11 @@ public class BusinessCalendarResource {
 
 	@GET
 	@Produces(MediaType.APPLICATION_JSON)
-	@Path("user/motu.json")
-	public Response getUserCalendars() {
+	@Path("user/event.json")
+	public Response getUserEvents() {
 		try {
 			return Response.ok(
-					getBusinessCalendarService().getUserCalendars().toString(),
+					getBusinessCalendarService().getUserEvents().toString(),
 					MediaType.APPLICATION_JSON_TYPE).build();
 		} catch (Exception e) {
 			trace.error(e, e);
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/fundCalendarEntryDialog.html b/stardust-business-calendar/src/main/resources/META-INF/webapp/fundCalendarEntryDialog.html
deleted file mode 100644
index d6e5d49..0000000
--- a/stardust-business-calendar/src/main/resources/META-INF/webapp/fundCalendarEntryDialog.html
+++ /dev/null
@@ -1 +0,0 @@
-<h1>Fund Calendar Entry</h1>
\ No newline at end of file
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarManagementController.js b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarManagementController.js
index d3d351d..b3f8b8c 100644
--- a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarManagementController.js
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarManagementController.js
@@ -169,9 +169,9 @@ define(
 				 */
 				BusinessCalendarManagementController.prototype.openBusinessCalendarView = function(
 						calendar) {
-					console.log("Open Business Calendar View");
 					var openView = this.openView("businessCalendarView",
-							"uuid=" + calendar.uuid + "&name=" + calendar.name,
+							"uuid=" + calendar.uuid + "&plugin="
+									+ calendar.pluginId + "&name=" + calendar.name,
 							"uuid=" + calendar);
 				};
 
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarPlugin.js b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarPlugin.js
index e631021..b14747e 100644
--- a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarPlugin.js
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarPlugin.js
@@ -14,78 +14,10 @@ define([ "checklist-management/js/Utils", "business-calendar/js/AjaxUtils",
 	/**
 	 */
 	function BusinessCalendarPlugin() {
-		/**
-		 * Retrieves calendar.
-		 */
-		BusinessCalendarPlugin.prototype.getCalendar = function(path) {
-			// TODO For testing
-
-			var calendars = {
-				"1000" : {
-					uuid : "1000",
-					name : "My Calendar",
-					type : "userCalendar",
-					scope : "User",
-					businessObject : "Master of the Universe",
-					importedCalendars : [ {
-						uuid : "2000",
-						name : "USA"
-					}, {
-						uuid : "1001",
-						name : "Fund Managers (Asia 100)"
-					} ],
-					singleEvents : [],
-					recurringEvents : []
-				},
-				"1001" : {
-					uuid : "1001",
-					name : "Fund Managers (Asia 100)",
-					type : "organizationCalendar",
-					scope : "Department",
-					businessObject : "Fund Managers (Asia 100)",
-					importedCalendars : [ {
-						uuid : "1002",
-						name : "Northern Trust"
-					} ],
-					singleEvents : [],
-					recurringEvents : []
-				},
-				"1002" : {
-					uuid : "1002",
-					name : "Northern Trust",
-					type : "organizationCalendar",
-					scope : "Organization",
-					businessObject : "Northern Trust",
-					singleEvents : [],
-					recurringEvents : []
-				},
-				"2000" : {
-					uuid : "2000",
-					type : "regionCalendar",
-					name : "USA",
-					scope : "Country",
-					businessObject : "USA",
-					singleEvents : [],
-					recurringEvents : []
-				},
-				"2001" : {
-					uuid : "2001",
-					type : "regionCalendar",
-					name : "Ireland",
-					scope : "Country",
-					businessObject : "Ireland",
-					singleEvents : [],
-					recurringEvents : []
-				}
-			};
-
-			return calendars[path];
-		};
-
 		/*
 		 * 
 		 */
-		BusinessCalendarPlugin.prototype.getCalendarGroups = function() {
+		BusinessCalendarPlugin.prototype.getCalendarGroupsDefault = function() {
 			var deferred = jQuery.Deferred();
 			var self = this;
 			var rootUrl = location.href.substring(0, location.href
@@ -115,5 +47,62 @@ define([ "checklist-management/js/Utils", "business-calendar/js/AjaxUtils",
 
 			return deferred.promise();
 		};
+
+		/**
+		 * 
+		 */
+		BusinessCalendarPlugin.prototype.getCalendarDefault = function(uuid) {
+			var deferred = jQuery.Deferred();
+
+			AjaxUtils.ajax(this.getRootUrl() + "/calendar/" + uuid + ".json",
+					"GET").done(function(data) {
+				deferred.resolve(data);
+			}).fail(function(data) {
+				deferred.reject(data.responseText);
+			});
+
+			return deferred.promise();
+		};
+
+		/**
+		 * 
+		 */
+		BusinessCalendarPlugin.prototype.updateCalendarDefault = function(
+				calendar) {
+			var deferred = jQuery.Deferred();
+			var self = this;
+
+			// Remove calculated
+
+			var events = [];
+
+			for (var n = 0; n < calendar.events.length; ++n) {
+				if (!calendar.events[n].calculated) {
+					events.push(calendar.events[n]);
+				}
+			}
+
+			calendar.events = events;
+
+			AjaxUtils.ajax(this.getRootUrl() + "/calendar.json", "POST",
+					calendar).done(function(calendar) {
+
+				// Reload entire calendar
+						
+				self.getCalendar(calendar.uuid).done(function() {
+					deferred.resolve(calendar);
+				}).fail(function() {
+					deferred.reject(data.responseText);
+				});
+			}).fail(function(data) {
+				deferred.reject(data.responseText);
+			});
+
+			return deferred.promise();
+		};
+
+		BusinessCalendarPlugin.prototype.getRootUrl = function() {
+			return "/services/rest/business-calendar";
+		};
 	}
 });
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarPluginManager.js b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarPluginManager.js
index f8792ee..77e4d03 100644
--- a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarPluginManager.js
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarPluginManager.js
@@ -36,7 +36,7 @@ define(
 							return this.businessCalendarPlugins[n];
 						}
 					}
-				}
+				};
 
 				/**
 				 * Returns calendar group structure.
@@ -71,6 +71,7 @@ define(
 					} else {
 						console.log("Processing "
 								+ this.businessCalendarPlugins[index].id);
+						console.log(this.businessCalendarPlugins[index]);
 
 						this.businessCalendarPlugins[index].getCalendarGroups()
 								.done(
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarViewController.js b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarViewController.js
index 6771ea3..a0dd715 100644
--- a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarViewController.js
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/BusinessCalendarViewController.js
@@ -39,10 +39,14 @@ define(
 					console.log("Parameters");
 					console.log(this.parameters);
 
+					this.businessCalendarPlugin = BusinessCalendarPluginManager
+							.instance().getPlugin(this.parameters["plugin"]);
+
+					console.log(this.businessCalendarPlugin);
+
 					var self = this;
 
-					BusinessCalendarService
-							.instance()
+					this.businessCalendarPlugin
 							.getCalendar(this.parameters["uuid"])
 							.done(
 									function(calendar) {
@@ -50,30 +54,17 @@ define(
 
 										console.log(calendar);
 
-										self.businessCalendarPlugin = BusinessCalendarPluginManager
-												.instance().getPlugin(
-														calendar.pluginId);
-
-										console
-												.log(self.businessCalendarPlugin);
-
 										if (!self.calendar.importedCalendars) {
 											self.calendar.importedCalendars = [];
 										}
 
-										BusinessCalendarService
+										BusinessCalendarPluginManager
 												.instance()
-												.getCalendars()
+												.getCalendarGroups()
 												.done(
-														function(calendars) {
-															self.otherCalendars = [];
-
-															for ( var uuid in calendars) {
-																if (uuid != self.calendar.uuid) {
-																	self.otherCalendars
-																			.push(calendars[uuid]);
-																}
-															}
+														function(groups) {
+															self
+																	.loadCalendarStubsForGroups(groups);
 
 															self.events = [];
 
@@ -93,6 +84,14 @@ define(
 																					self
 																							.openCreateEventDialog();
 																				},
+																				eventClick : function(
+																						event,
+																						jsEvent) {
+																					console
+																							.log(jsEvent);
+																					self
+																							.openCreateEventDialog(event);
+																				},
 																				events : self.events
 																			});
 
@@ -104,28 +103,89 @@ define(
 				/**
 				 * 
 				 */
+				BusinessCalendarViewController.prototype.loadCalendarStubsForGroups = function(
+						groups) {
+					this.otherCalendars = [];
+
+					for (var n = 0; n < groups.length; ++n) {
+						this.loadCalendarStubsForGroup(groups[n]);
+					}
+				};
+
+				BusinessCalendarViewController.prototype.loadCalendarStubsForGroup = function(
+						group) {
+					if (group.calendars) {
+						for (var n = 0; n < group.calendars.length; ++n) {
+							for ( var uuid in group.calendars) {
+								if (uuid != self.calendar.uuid) {
+									this.otherCalendars
+											.push(group.calendars[uuid]);
+								}
+							}
+						}
+					}
+
+					if (group.subGroups) {
+						for (var n = 0; n < group.subGroups.length; ++n) {
+							this.loadCalendarStubsForGroup(group.subGroups[n]);
+						}
+					}
+				};
+
+				/**
+				 * 
+				 */
 				BusinessCalendarViewController.prototype.mapEvents = function(
 						calendar) {
-					if (calendar.singleEvents) {
-						for (var n = 0; n < calendar.singleEvents.length; ++n) {
-							console.log("Adding event "
-									+ calendar.singleEvents[n].name);
-
-							this.events.push({
-								title : calendar.singleEvents[n].name,
-								start : calendar.singleEvents[n].start,
-								end : calendar.singleEvents[n].end,
-								className : calendar.singleEvents[n].type
-							});
+					console.log("Map Events for");
+					console.log(calendar);
+
+					if (calendar.events) {
+						for (var n = 0; n < calendar.events.length; ++n) {
+							console.log("Adding event");
+							console.log(calendar.events[n]);
+
+							if (calendar.events[n].occurrence == "single") {
+								this.events
+										.push({
+											title : calendar.events[n].title,
+											start : calendar.events[n].singleOccurenceTime,
+											end : calendar.events[n].singleOccurenceTime
+													+ 2 * 60 * 60 * 1000,
+											className : calendar.events[n].type,
+											event : calendar.events[n]
+										});
+							} else {
+								this.mapRecurringEvent(calendar.events[n]);
+							}
 						}
 					}
+				};
 
-					if (calendar.importedCalendars) {
-						for (var n = 0; n < calendar.importedCalendars.length; ++n) {
-							console.log("Mapping imported "
-									+ calendar.importedCalendars[n].name);
-							this.mapEvents(calendar.importedCalendars[n]);
-						}
+				/**
+				 * 
+				 */
+				BusinessCalendarViewController.prototype.mapRecurringEvent = function(
+						recurringEvent) {
+					// TODO Needs all the logic for displayed days and
+					// evaluation of recurrence
+
+					var start = moment().dayOfYear(0);
+
+					start.day(6);
+					start.hour(0);
+					start.minute(0);
+
+					for (var n = 0; n < 52; ++n) {
+						this.events.push({
+							title : recurringEvent.title,
+							start : start.valueOf(),
+							end : start.clone().add('hours', 48).valueOf(),
+							className : recurringEvent.type,
+							event : recurringEvent
+						});
+
+						start = start.add("w", 1);
 					}
 				};
 
@@ -187,9 +247,10 @@ define(
 					}
 				};
 
-				BusinessCalendarViewController.prototype.openCreateEventDialog = function() {
-					console.log("===> Imported Calendars");
-					console.log(this.importedCalendars);
+				BusinessCalendarViewController.prototype.openCreateEventDialog = function(
+						event) {
+					console.log("Open Dialog");
+					console.log(event);
 
 					var self = this;
 
@@ -198,8 +259,52 @@ define(
 							.getStartableProcesses()
 							.done(
 									function(startableProcesses) {
-										self.createEventDialog.startableProcesses = startableProcesses;
-										self.createEventDialog.occurence = "single";
+										if (event) {
+											self.createEventDialog.mode = "UPDATE";
+											self.createEventDialog.startableProcesses = startableProcesses;
+											self.createEventDialog.event = event.event;
+
+											// TODO Proper Date Control
+
+											var start = moment(self.createEventDialog.event.start);
+											var end = moment(self.createEventDialog.event.end);
+
+											self.createEventDialog.from = start
+													.format("hh:mm:ss");
+											self.createEventDialog.to = end
+													.format("hh:mm:ss");
+											self.createEventDialog.start = start
+													.format("YYYY-MM-DD");
+
+											console.log(this.createEventDialog);
+
+											self.scheduling = {
+												recurrenceInterval : "DAILY"
+											};
+
+										} else {
+											self.createEventDialog.mode = "CREATE";
+											self.createEventDialog.startableProcesses = startableProcesses;
+											self.createEventDialog.event = {
+												occurence : "single",
+											};
+
+											// TODO Proper Date Control
+
+											var start = moment();
+											var end = moment().clone().add(
+													'hours', 1);
+
+											self.createEventDialog.from = start
+													.format("hh:mm:ss");
+											self.createEventDialog.to = end
+													.format("hh:mm:ss");
+											self.createEventDialog.start = start
+													.format("YYYY-MM-DD");
+
+											console.log(self.createEventDialog);
+										}
+
 										self.scheduling = {
 											recurrenceInterval : "DAILY"
 										};
@@ -209,31 +314,73 @@ define(
 									}).fail();
 				};
 
+				/**
+				 * 
+				 */
 				BusinessCalendarViewController.prototype.createEvent = function() {
-					var start = moment();
-					var end = start.clone().add('hours', 2);
+					if (this.createEventDialog.event.occurence == 'recurring') {
+						this.createEventDialog.event.scheduling = this.scheduling;
 
-					for (var n = 0; n < 31; ++n) {
-						console.log(start.calendar());
-						console.log(end.calendar());
+					} else {
+						// TODO Proper Date Control
 
-						this.events
-								.push({
-									title : this.createEventDialog.process.name,
-									start : start.valueOf(),
-									end : end.valueOf(),
-									className : this.createEventDialog.startMode == "userStart" ? "userStartEvent"
-											: "automaticStartEvent"
-								});
+						this.createEventDialog.event.start = new Date(
+								this.createEventDialog.start).getTime();
+					}
 
-						start.add('days', 1);
+					var self = this;
+
+					this.businessCalendarPlugin.createEvent(this.calendar,
+							this.createEventDialog.event).done(
+							function(calendar) {
+								self.calendar = calendar;
+
+								// Empty array without changing reference
+
+								while (self.events.length > 0) {
+									self.events.pop();
+								}
 
-						end = start.clone().add('hours', 2);
+								self.mapEvents(self.calendar);
+
+								jQuery('#calendar').fullCalendar(
+										"refetchEvents");
+
+								self.closeCreateEventDialog();
+							}).fail();
+				};
+
+				/**
+				 * 
+				 */
+				BusinessCalendarViewController.prototype.updateEvent = function() {
+					if (this.createEventDialog.event.occurence == 'recurring') {
+						this.createEventDialog.event.scheduling = this.scheduling;
+					} else {
+						// TODO Proper Date Control
+
+						this.createEventDialog.event.start = new Date(
+								this.createEventDialog.start).getTime();
 					}
 
-					jQuery('#calendar').fullCalendar("refetchEvents");
+					var self = this;
+
+					this.businessCalendarPlugin.updateEvent(this.calendar)
+							.done(
+									function() {
+										self.events = [];
+
+										self.mapEvents(self.calendar);
+
+										console.log("Mapped Events");
+										console.log(self.events);
 
-					this.closeCreateEventDialog();
+										jQuery('#calendar').fullCalendar(
+												"refetchEvents");
+
+										self.closeCreateEventDialog();
+
+									}).fail();
 				};
 
 				BusinessCalendarViewController.prototype.closeCreateEventDialog = function() {
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/FundProcessingCalendarPlugin.js b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/FundProcessingCalendarPlugin.js
index 43bfdb7..e1d1e9f 100644
--- a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/FundProcessingCalendarPlugin.js
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/FundProcessingCalendarPlugin.js
@@ -26,29 +26,30 @@ define(
 				 */
 				FundProcessingCalendarPlugin.prototype.getCalendarGroups = function(
 						calendar) {
-					var deferred = jQuery.Deferred();
-					var self = this;
-
-					this.mutualFundsGroup = {
-						name : "Mutual Funds",
-						calendars : [],
-					};
-
-					this.getFunds().done(function() {
-						deferred.resolve([ {
-							name : "Fund Management",
-							calendars : [],
-							subGroups : [ self.mutualFundsGroup, {
-								name : "Structured Products Funds"
-							}, {
-								name : "Multi-Manager Funds"
-							} ]
-						} ]);
-					}).fail(function() {
-						deferred.reject();
-					});
-
-					return deferred.promise();
+					// var deferred = jQuery.Deferred();
+					// var self = this;
+					//
+					// this.mutualFundsGroup = {
+					// name : "Mutual Funds",
+					// calendars : [],
+					// };
+					//
+					// this.getFunds().done(function() {
+					// deferred.resolve([ {
+					// name : "Fund Management",
+					// calendars : [],
+					// subGroups : [ self.mutualFundsGroup, {
+					// name : "Structured Products Funds"
+					// }, {
+					// name : "Multi-Manager Funds"
+					// } ]
+					// } ]);
+					// }).fail(function() {
+					// deferred.reject();
+					// });
+					//
+					// return deferred.promise();
+					return this.getCalendarGroupsDefault();
 				};
 
 				/**
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/ProcessingCalendarPlugin.js b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/ProcessingCalendarPlugin.js
index 0ab3039..69cd828 100644
--- a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/ProcessingCalendarPlugin.js
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/ProcessingCalendarPlugin.js
@@ -25,6 +25,8 @@ define(
 				Utils.inheritMethods(this, BusinessCalendarPlugin.create());
 
 				this.id = "processingCalendar";
+				this.entryDialogHtml = "../processingCalendarEntryDialog.html";
+				this.calendarHeaderHtml = "../processingCalendarHeader.html";
 				this.topGroupName = "Processing Calendars";
 				this.processingPlugins = [ FundProcessingCalendarPlugin
 						.instance() ];
@@ -32,37 +34,38 @@ define(
 				/**
 				 * Returns calendar folder structure.
 				 */
-//				ProcessingCalendarPlugin.prototype.getCalendarGroups = function(
-//						calendar) {
-//					var deferred = jQuery.Deferred();
-//
-//					this.processingCalendarGroup = {
-//						name : "Processing Calendars",
-//						subGroups : []
-//					};
-//
-//					var self = this;
-//
-//					this
-//							.loadCalendarGroups([], 0)
-//							.done(
-//									function(groups) {
-//										console.log("Processing Groups");
-//										console.log(groups);
-//
-//										for (var n = 0; n < groups.length; ++n) {
-//											self.processingCalendarGroup.subGroups
-//													.push(groups[n]);
-//										}
-//
-//										deferred
-//												.resolve([ self.processingCalendarGroup ]);
-//									}).fail(function() {
-//								deferred.reject();
-//							});
-//
-//					return deferred.promise();
-//				};
+				ProcessingCalendarPlugin.prototype.getCalendarGroups = function(
+						calendar) {
+					// var deferred = jQuery.Deferred();
+					//
+					// this.processingCalendarGroup = {
+					// name : "Processing Calendars",
+					// subGroups : []
+					// };
+					//
+					// var self = this;
+					//
+					// this
+					// .loadCalendarGroups([], 0)
+					// .done(
+					// function(groups) {
+					// console.log("Processing Groups");
+					// console.log(groups);
+					//
+					// for (var n = 0; n < groups.length; ++n) {
+					// self.processingCalendarGroup.subGroups
+					// .push(groups[n]);
+					// }
+					//
+					// deferred
+					// .resolve([ self.processingCalendarGroup ]);
+					// }).fail(function() {
+					// deferred.reject();
+					// });
+					//
+					// return deferred.promise();
+					return this.getCalendarGroupsDefault();
+				};
 
 				/**
 				 * Nested deferred.
@@ -94,5 +97,33 @@ define(
 
 					return deferred.promise();
 				};
+
+				/**
+				 * 
+				 */
+				ProcessingCalendarPlugin.prototype.getCalendar = function(uuid) {
+					return this.getCalendarDefault(uuid);
+				};
+
+				/**
+				 * 
+				 */
+				ProcessingCalendarPlugin.prototype.createEvent = function(
+						calendar, event) {
+					event.type = "timeOffEvent";
+
+					calendar.events.push(event);
+					
+					return this.updateCalendarDefault(calendar);
+				};
+				
+				/**
+				 * 
+				 */
+				ProcessingCalendarPlugin.prototype.updateCalendar = function(
+						calendar) {
+					return this.updateCalendarDefault(calendar);
+				};
+
 			}
 		});
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/RegionalCalendarPlugin.js b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/RegionalCalendarPlugin.js
index e306227..e552a76 100644
--- a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/RegionalCalendarPlugin.js
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/RegionalCalendarPlugin.js
@@ -26,28 +26,40 @@ define(
 				this.id = "regionalCalendar";
 				this.topGroupName = "Regional Calendars";
 				this.entryDialogHtml = "../regionalCalendarEntryDialog.html";
+				this.calendarHeaderHtml = "../regionalCalendarHeader.html";
 
 				/**
-				 * Returns calendar folder structure.
+				 * 
 				 */
-				RegionalCalendarPlugin.prototype.getCalendarGroups = function(
-						calendar) {
-					var deferred = jQuery.Deferred();
-
-					deferred.resolve([ {
-						name : "Regional Calendars",
-						calendars : [ {
-							uuid : "2000",
-							type : "regionCalendar",
-							name : "USA"
-						}, {
-							uuid : "2001",
-							type : "regionCalendar",
-							name : "Ireland"
-						} ]
-					} ]);
-
-					return deferred.promise();
+				RegionalCalendarPlugin.prototype.getCalendarGroups = function() {
+					return this.getCalendarGroupsDefault();
 				};
+
+				/**
+				 * 
+				 */
+				RegionalCalendarPlugin.prototype.getCalendar = function(uuid) {
+					return this.getCalendarDefault(uuid);
+				};
+
+				/**
+				 * 
+				 */
+				RegionalCalendarPlugin.prototype.createEvent = function(
+						calendar, event) {
+					event.type = "timeOffEvent";
+
+					calendar.events.push(event);
+					
+					return this.updateCalendarDefault(calendar);
+				};
+				
+				/**
+				 * 
+				 */
+				RegionalCalendarPlugin.prototype.updateCalendar = function(calendar) {
+					return this.updateCalendarDefault(calendar);
+				};
+
 			}
 		});
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/UserCalendarPlugin.js b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/UserCalendarPlugin.js
index 6318364..75030a0 100644
--- a/stardust-business-calendar/src/main/resources/META-INF/webapp/js/UserCalendarPlugin.js
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/js/UserCalendarPlugin.js
@@ -9,7 +9,8 @@ define([ "checklist-management/js/Utils", "business-calendar/js/AjaxUtils",
 	return {
 		instance : function() {
 			if (!window.top.userCalendarPlugin) {
-				window.top.userCalendarPlugin = new UserCalendarPlugin();
+				window.top.userCalendarPlugin = new UserCalendarPlugin()
+						.initialize();
 			}
 
 			return window.top.userCalendarPlugin;
@@ -19,43 +20,80 @@ define([ "checklist-management/js/Utils", "business-calendar/js/AjaxUtils",
 	/**
 	 */
 	function UserCalendarPlugin() {
-		Utils.inheritMethods(this, BusinessCalendarPlugin.create());
-
-		this.id = "participantCalendar";
+		this.id = "userCalendar";
 		this.topGroupName = "My Calendars";
 		this.entryDialogHtml = "../userCalendarEntryDialog.html";
+		this.calendarHeaderHtml = "../userCalendarHeader.html";
+
+		/**
+		 * Returns calendar folder structure.
+		 */
+		UserCalendarPlugin.prototype.initialize = function() {
+			Utils.inheritMethods(this, BusinessCalendarPlugin.create());
+
+			return this;
+		};
+
+		/**
+		 * Returns calendar folder structure.
+		 */
+		UserCalendarPlugin.prototype.getCalendarGroups = function(calendar) {
+			return this.getCalendarGroupsDefault();
+		};
+
+		/**
+		 * 
+		 */
+		UserCalendarPlugin.prototype.getCalendar = function(uuid) {
+			console.log("UserCalendarPlugin.prototype.getCalendar");
+
+			var deferred = jQuery.Deferred();
+			var self = this;
+
+			this.getCalendarDefault(uuid).done(
+					function(calendar) {
+						console.log("Default calendar retrieval completed");
+						console.log(calendar);
+
+						AjaxUtils.ajax(self.getRootUrl() + "/user/event.json",
+								"GET").done(function(result) {
+							console.log("Additional events retrieved");
+							console.log(result);
+
+							if (result.events) {
+								for (var n = 0; n < result.events.length; ++n) {
+									result.events[n].calculated = true;
+									
+									calendar.events.push(result.events[n]);
+								}
+							}
+
+							deferred.resolve(calendar);
+						}).fail(function(data) {
+							deferred.reject(data.responseText);
+						});
+
+					}).fail();
+
+			return deferred.promise();
+		};
+
+		/**
+		 * 
+		 */
+		UserCalendarPlugin.prototype.createEvent = function(calendar, event) {
+			event.type = "timeOffEvent";
+
+			calendar.events.push(event);
+
+			return this.updateCalendarDefault(calendar);
+		};
+
+		/**
+		 * 
+		 */
+		UserCalendarPlugin.prototype.updateCalendar = function(calendar) {
+			return this.updateCalendarDefault(calendar);
+		};
 	}
-	
-	/**
-	 * Returns calendar folder structure.
-	 */
-	UserCalendarPlugin.prototype.getCalendarGroups = function(calendar) {
-		var deferred = jQuery.Deferred();
-
-		deferred.resolve([ {
-			name : "Personal, Department and Organization Calendars",
-			calendars : [ {
-				uuid : "1000",
-				type : "userCalendar",
-				name : "My Calendar",
-				importedCalendars : [ {
-					uuid : "2000",
-					type : "regionCalendar",
-					name : "USA"
-				}, {
-					uuid : "1001",
-					type : "organizationCalendar",
-					name : "Fund Managers (Asia 100)",
-					importedCalendars : [ {
-						uuid : "1002",
-						type : "organizationCalendar",
-						name : "Northern Trust"
-					} ]
-				} ]
-			} ],
-			subgroups : []
-		} ]);
-
-		return deferred.promise();
-	};
 });
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/processingCalendarEntryDialog.html b/stardust-business-calendar/src/main/resources/META-INF/webapp/processingCalendarEntryDialog.html
new file mode 100644
index 0000000..bd9518f
--- /dev/null
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/processingCalendarEntryDialog.html
@@ -0,0 +1,31 @@
+<h1>Fund Calendar Entry</h1>
+<table cellpadding="0" cellspacing="0" class="formTable">
+	<tr>
+		<td><label>Process/Checklist to be started with Fund</label></td>
+		<td><select ng-model="createEventDialog.process"
+			ng-options="process as process.name for process in createEventDialog.startableProcesses"></select></td>
+	</tr>
+</table>
+<table cellpadding="0" cellspacing="0" class="formTable">
+	<tr>
+		<td><input type="radio" value="single"
+			ng-model="createEventDialog.event.occurence"></input></td>
+		<td><label>Single Processing</label></td>
+		<td><input type="radio" value="recurring"
+			ng-model="createEventDialog.event.occurence"></input></td>
+		<td><label>Recurring Processing</label></td>
+	</tr>
+</table>
+<div ng-include src="'schedulingPanel.html'"
+	ng-show="createEventDialog.event.occurence == 'recurring'"
+	style="margin-top: 10px;"></div>
+<div ng-show="createEventDialog.event.occurence == 'single'"
+	style="margin-top: 10px;">
+	<table cellpadding="0" cellspacing="0" class="formTable">
+		<tr>
+			<td><label>Date and Time</label></td>
+			<td><input type="date"
+				ng-model="createEventDialog.event.singleOccurenceTime"></input></td>
+		</tr>
+	</table>
+</div>
\ No newline at end of file
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/processingCalendarHeader.html b/stardust-business-calendar/src/main/resources/META-INF/webapp/processingCalendarHeader.html
new file mode 100644
index 0000000..ea318cc
--- /dev/null
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/processingCalendarHeader.html
@@ -0,0 +1,29 @@
+<h1>Processing Calendar - {{calendar.name}}</h1>
+<table cellpadding="0" cellspacing="0" class="formTable"
+	style="margin-top: 10px; margin-bottom: 10px;">
+	<tr>
+		<td><label>Import blocked Time/Time off from </label></td>
+	</tr>
+	<tr>
+		<td><select multiple ng-model="calendar.importedCalendars"
+			ng-options="otherCalendar as otherCalendar.name for otherCalendar in otherCalendars"
+			ng-change="updateCalendar()" style="height: 80px; min-width: 100px;">
+		</select></td>
+	</tr>
+</table>
+<table style="margin-top: 10px; margin-bottom: 10px;">
+	<tr>
+		<td>
+			<div class="userStartEvent eventTypeLegend"></div>
+		</td>
+		<td><label>Automatic and User Startable</label></td>
+		<td>
+			<div class="automaticStartEvent eventTypeLegend"></div>
+		</td>
+		<td><label>Automatic Start only</label></td>
+		<td>
+			<div class="timeOffEvent eventTypeLegend"></div>
+		</td>
+		<td><label>Blocked Time/Time off</label></td>
+	</tr>
+</table>
\ No newline at end of file
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/regionalCalendarEntryDialog.html b/stardust-business-calendar/src/main/resources/META-INF/webapp/regionalCalendarEntryDialog.html
index 0fde60b..2c94a0e 100644
--- a/stardust-business-calendar/src/main/resources/META-INF/webapp/regionalCalendarEntryDialog.html
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/regionalCalendarEntryDialog.html
@@ -1 +1,39 @@
-<h1>Regional Calendar Entry</h1>
\ No newline at end of file
+<h2>Regional Calendar Entry</h2>
+<div class="errorMessagesPanel"
+	ng-show="createEventDialog.errors.length > 0">
+	<ul>
+		<li ng-repeat="error in createEventDialog.errors"><span
+			class="errorMessage">{{error.message}}</span></li>
+	</ul>
+</div>
+<table cellpadding="0" cellspacing="0" class="formTable">
+	<tr>
+		<td><label>Holiday Name</label></td>
+		<td><input ng-model="createEventDialog.event.title"></input></td>
+	</tr>
+</table>
+<table cellpadding="0" cellspacing="0" class="formTable">
+	<tr>
+		<td><input type="radio" value="single"
+			ng-model="createEventDialog.event.occurence"></input></td>
+		<td><label>Single Holiday</label></td>
+		<td><input type="radio" value="recurring"
+			ng-model="createEventDialog.event.occurence"></input></td>
+		<td><label>Recurring Holiday</label></td>
+	</tr>
+</table>
+<div ng-include src="'schedulingPanel.html'"
+	ng-show="createEventDialog.event.occurence == 'recurring'"
+	style="margin-top: 10px;"></div>
+<div ng-show="createEventDialog.event.occurence == 'single'"
+	style="margin-top: 10px;">
+	<table cellpadding="0" cellspacing="0" class="formTable">
+		<tr>
+			<td><label>Date and Time</label></td>
+			<td><input type="date"
+				ng-model="createEventDialog.event.singleOccurenceTime"></input></td>
+		</tr>
+	</table>
+</div>
+
+
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/regionalCalendarHeader.html b/stardust-business-calendar/src/main/resources/META-INF/webapp/regionalCalendarHeader.html
new file mode 100644
index 0000000..1c2b38d
--- /dev/null
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/regionalCalendarHeader.html
@@ -0,0 +1,21 @@
+<h1>Regional Calendar - {{calendar.name}}</h1>
+<table cellpadding="0" cellspacing="0" class="formTable"
+	style="margin-top: 10px; margin-bottom: 10px;">
+	<tr>
+		<td><label>Import blocked Time/Time off from </label></td>
+	</tr>
+	<tr>
+		<td><select multiple ng-model="calendar.importedCalendars"
+			ng-options="otherCalendar as otherCalendar.name for otherCalendar in otherCalendars"
+			ng-change="updateCalendar()" style="height: 80px; min-width: 100px;">
+		</select></td>
+	</tr>
+</table>
+<table style="margin-top: 10px; margin-bottom: 10px;">
+	<tr>
+		<td>
+			<div class="timeOffEvent eventTypeLegend"></div>
+		</td>
+		<td><label>Blocked Time/Time off</label></td>
+	</tr>
+</table>
\ No newline at end of file
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/userCalendarEntryDialog.html b/stardust-business-calendar/src/main/resources/META-INF/webapp/userCalendarEntryDialog.html
index b461527..458925c 100644
--- a/stardust-business-calendar/src/main/resources/META-INF/webapp/userCalendarEntryDialog.html
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/userCalendarEntryDialog.html
@@ -1 +1,71 @@
-<h1>User Calendar Entry</h1>
\ No newline at end of file
+<h2>User Calendar Entry</h2>
+<div class="errorMessagesPanel"
+	ng-show="createEventDialog.errors.length > 0">
+	<ul>
+		<li ng-repeat="error in createEventDialog.errors"><span
+			class="errorMessage">{{error.message}}</span></li>
+	</ul>
+</div>
+<table cellpadding="0" cellspacing="0" class="layoutTable">
+	<tr valign="top">
+		<td><table cellpadding="0" cellspacing="0" class="formTable">
+				<tr>
+					<td><label>Event Name</label></td>
+					<td><input ng-model="createEventDialog.event.title"
+						ng-disabled="createEventDialog.event.type == 'pastEvent'"></input></td>
+				</tr>
+			</table></td>
+		<td ng-hide="createEventDialog.event.type == 'pastEvent'"><table
+				cellpadding="0" cellspacing="0" class="formTable">
+				<tr>
+					<td><label>Event Type</label></td>
+					<td><select ng-model="createEventDialog.event.type"><option
+								value="timeOffEvent">Time Off</option>
+							<option value="delegateAssignmentEvent">Delegate
+								Assignment</option></select></td>
+				</tr>
+			</table></td>
+	</tr>
+</table>
+<table cellpadding="0" cellspacing="0" class="layoutTable">
+	<tr valign="top">
+		<td><table cellpadding="0" cellspacing="0" class="formTable">
+				<tr>
+					<td><label>From</label></td>
+					<td><input type="time" ng-model="createEventDialog.from"
+						ng-disabled="createEventDialog.event.type == 'pastEvent'" value="{{createEventDialog.from}}"></input></td>
+				</tr>
+			</table></td>
+		<td><table cellpadding="0" cellspacing="0" class="formTable">
+				<tr>
+					<td><label>To</label></td>
+					<td><input type="time" ng-model="createEventDialog.to"
+						ng-disabled="createEventDialog.event.type == 'pastEvent'" value="{{createEventDialog.to}}"></input></td>
+				</tr>
+			</table></td>
+	</tr>
+</table>
+<table cellpadding="0" cellspacing="0" class="formTable">
+	<tr>
+		<td><input type="radio" value="single"
+			ng-model="createEventDialog.event.occurence"
+			ng-disabled="createEventDialog.event.type == 'pastEvent'"></input></td>
+		<td><label>Single Event</label></td>
+		<td><input type="radio" value="recurring"
+			ng-model="createEventDialog.event.occurence"
+			ng-disabled="createEventDialog.event.type == 'pastEvent'"></input></td>
+		<td><label>Recurring Event</label></td>
+	</tr>
+</table>
+<div ng-include src="'schedulingPanel.html'"
+	ng-show="createEventDialog.event.occurence == 'recurring'"
+	style="margin-top: 10px;"></div>
+<div ng-show="createEventDialog.event.occurence == 'single'"
+	style="margin-top: 10px;">
+	<table cellpadding="0" cellspacing="0" class="formTable">
+		<tr>
+			<td><label>Date</label></td>
+			<td><input type="date" ng-model="createEventDialog.start" value="{{createEventDialog.start}}"></input></td>
+		</tr>
+	</table>
+</div>
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/userCalendarHeader.html b/stardust-business-calendar/src/main/resources/META-INF/webapp/userCalendarHeader.html
new file mode 100644
index 0000000..8f1cf8d
--- /dev/null
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/userCalendarHeader.html
@@ -0,0 +1,29 @@
+<h1>User Calendar - {{calendar.name}}</h1>
+<table cellpadding="0" cellspacing="0" class="formTable"
+	style="margin-top: 10px; margin-bottom: 10px;">
+	<tr>
+		<td><label>Import blocked Time/Time off from </label></td>
+	</tr>
+	<tr>
+		<td><select multiple ng-model="calendar.importedCalendars"
+			ng-options="otherCalendar as otherCalendar.name for otherCalendar in otherCalendars"
+			ng-change="updateCalendar()" style="height: 80px; min-width: 100px;">
+		</select></td>
+	</tr>
+</table>
+<table style="margin-top: 10px; margin-bottom: 10px;">
+	<tr>
+		<td>
+			<div class="pastEvent eventTypeLegend"></div>
+		</td>
+		<td><label>Past Activity</label></td>
+		<td>
+			<div class="futureEvent eventTypeLegend"></div>
+		</td>
+		<td><label>Future Activity</label></td>
+		<td>
+			<div class="timeOffEvent eventTypeLegend"></div>
+		</td>
+		<td><label>Blocked Time/Time off</label></td>
+	</tr>
+</table>
\ No newline at end of file
diff --git a/stardust-business-calendar/src/main/resources/META-INF/webapp/views/businessCalendarView.html b/stardust-business-calendar/src/main/resources/META-INF/webapp/views/businessCalendarView.html
index e2cd308..09a9cc8 100644
--- a/stardust-business-calendar/src/main/resources/META-INF/webapp/views/businessCalendarView.html
+++ b/stardust-business-calendar/src/main/resources/META-INF/webapp/views/businessCalendarView.html
@@ -60,74 +60,9 @@
 <body ng-controller="businessCalendarViewController">
 	<div
 		style="margin-left: 10px; margin-right: 10px; margin-bottom: 10px;">
-		<h1>
-			<span ng-show="businessCalendarPlugin.id == 'processingCalendar'">PROCESSING
-				CALENDAR</span><span ng-show="businessCalendarPlugin.id == 'userCalendar'">USER
-				CALENDAR</span><span
-				ng-show="businessCalendarPlugin.id == 'regionalCalendar'">REGIONAL
-				CALENDAR</span> - {{calendar.scope.toUpperCase()}}
-			{{calendar.businessObject.toUpperCase()}}
-		</h1>
-		<table cellpadding="0" cellspacing="0" class="formTable"
-			style="margin-top: 10px;">
-			<tr>
-				<td><label>Import blocked Time/Time off from </label></td>
-			</tr>
-			<tr>
-				<td><select multiple ng-model="calendar.importedCalendars"
-					ng-options="otherCalendar as otherCalendar.name for otherCalendar in otherCalendars"
-					ng-change="updateCalendar()" style="height: 80px;">
-				</select></td>
-			</tr>
-		</table>
-		<table style="margin-top: 10px; margin-bottom: 10px;"
-			ng-show="calendar.type == 'userCalendar'">
-			<tr>
-				<td>
-					<div class="pastEvent eventTypeLegend"></div>
-				</td>
-				<td><label>Past Activity</label></td>
-				<td>
-					<div class="futureEvent eventTypeLegend"></div>
-				</td>
-				<td><label>Future Activity</label></td>
-				<td>
-					<div class="timeOffEvent eventTypeLegend"></div>
-				</td>
-				<td><label>Blocked Time/Time off</label></td>
-			</tr>
-		</table>
-		<table style="margin-top: 10px; margin-bottom: 10px;"
-			ng-show="calendar.type == 'regionCalendar'">
-			<tr>
-				<td>
-					<div class="timeOffEvent eventTypeLegend"></div>
-				</td>
-				<td><label>Blocked Time/Time off</label></td>
-			</tr>
-		</table>
-		<table style="margin-top: 10px; margin-bottom: 10px;"
-			ng-show="calendar.type == 'processingCalendar'">
-			<tr>
-				<td>
-					<div class="userStartEvent eventTypeLegend"></div>
-				</td>
-				<td><label>Automatic and User Startable</label></td>
-				<td>
-					<div class="automaticStartEvent eventTypeLegend"></div>
-				</td>
-				<td><label>Automatic Start only</label></td>
-				<td>
-					<div class="timeOffEvent eventTypeLegend"></div>
-				</td>
-				<td><label>Blocked Time/Time off</label></td>
-			</tr>
-		</table>
+		<div ng-include src="businessCalendarPlugin.calendarHeaderHtml"></div>
 		<div id="calendar"></div>
-		<div class="message" ng-show="message != null"
-			style="margin-bottom: 10px;">{{message}}</div>
 		<div ipp-dialog="createEventDialog">
-			<div ng-include src="businessCalendarPlugin.entryDialogHtml"></div>
 			<div class="errorMessagesPanel"
 				ng-show="createEventDialog.errors.length > 0">
 				<ul>
@@ -135,50 +70,19 @@
 						class="errorMessage">{{error.message}}</span></li>
 				</ul>
 			</div>
-			<div ng-show="businessCalendarPlugin.id == 'processingCalendar'">
-				<table cellpadding="0" cellspacing="0" class="formTable">
-					<tr>
-						<td><label>Process/Checklist to be started with Fund</label></td>
-						<td><select ng-model="createEventDialog.process"
-							ng-options="process as process.name for process in createEventDialog.startableProcesses"></select></td>
-					</tr>
-				</table>
-			</div>
-			<div ng-show="calendar.type == 'userCalendar'">
-				<p>Add time off</p>
-			</div>
-			<table cellpadding="0" cellspacing="0" class="formTable">
-				<tr>
-					<td><input type="radio" value="single"
-						ng-model="createEventDialog.occurence"></input></td>
-					<td><label>Single Process Start</label></td>
-					<td><input type="radio" value="recurring"
-						ng-model="createEventDialog.occurence"></input></td>
-					<td><label>Recurring Process Start</label></td>
-				</tr>
-			</table>
-			<div ng-include src="'schedulingPanel.html'"
-				ng-show="createEventDialog.occurence == 'recurring'"
-				style="margin-top: 10px;"></div>
-			<div ng-show="createEventDialog.occurence == 'single'"
-				style="margin-top: 10px;">
-				<table cellpadding="0" cellspacing="0" class="formTable">
-					<tr>
-						<td><label>Date and Time</label></td>
-						<td><input type="datetime"
-							ng-model="createEventDialog.singleOccurenceTime"></input></td>
-					</tr>
-				</table>
-			</div>
+			<div ng-include src="businessCalendarPlugin.entryDialogHtml"></div>
 			<table cellpadding="0" cellspacing="0"
 				style="width: 100%; margin-top: 10px;">
 				<tr>
 					<td align="center">
 						<table cellpadding="0" cellspacing="0">
 							<tr>
-								<td style="padding-right: 10px;"><input type="button"
+								<td style="padding-right: 10px;" ng-show="createEventDialog.mode == 'CREATE'"><input type="button"
 									class="primaryButton" value="Create"
-									ng-click="createEvent(scheduling)" style="width: 100px;" /></td>
+									ng-click="createEvent()" style="width: 100px;" /></td>
+								<td style="padding-right: 10px;" ng-show="createEventDialog.mode == 'UPDATE'"><input type="button"
+									class="primaryButton" value="Update"
+									ng-click="updateEvent()"  ng-disabled="createEventDialog.event.type == 'pastEvent'" style="width: 100px;" /></td>
 								<td><input type="button" value="Cancel"
 									ng-click="closeCreateEventDialog()" /></td>
 							</tr>
-- 
1.9.4.msysgit.0

