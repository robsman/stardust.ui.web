<f:view xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ice="http://www.icesoft.com/icefaces/component"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:pc="http://www.sungard.de/carnot/web/portal-plugin/portalcommon">

	<ice:panelGroup>
		<ui:include src="#{genericPopup.includePath}" />
		<ui:include src="/plugins/views-common/common/panelConfirmation.xhtml" />
	</ice:panelGroup>

	<c:choose>
		<c:when test="#{not empty disableContextMenu}">
			<c:set var="contextMenuDisabled" value="true" />
		</c:when>
		<c:otherwise>
			<c:set var="contextMenuDisabled" value="false" />
		</c:otherwise>
	</c:choose>

	<link
		href="#{facesContext.externalContext.requestContextPath}/plugins/views-common/css/context-portal.css"
		rel="stylesheet" type="text/css" />
	
	<!-- Participant Tree Heading -->
	<ice:panelGroup styleClass="heading">
		<ice:outputText
			value="#{views_common_msgPropsBean['views.participantTree.title']}" />
	</ice:panelGroup>

	<!-- Participant Tree Filter Bar -->
	<ice:panelGroup>
	<ui:repeat value="#{participantTree.onOffFilters}"
			var="filterItem">
			<ice:commandLink id="id_#{filterItem.name}" name="#{filterItem.name}"
				actionListener="#{participantTree.applyFilter}"
				style="vertical-align: middle;">
				<pc:automationTag
					value="auto-ADM-PartMgmtToolbar-#{filterItem.name}"
					standAlone="false" />
				<ice:graphicImage value="#{filterItem.imagePath}"
					style="border: none; padding-right: 5px;" styleClass="#{filterItem.styleClass}"
					title="#{filterItem.title}" />
				<ice:message for="id_#{filterItem.name}"/>	
			</ice:commandLink>
			
			<span class="toolbarGroupRight" style="padding-left: 2px; "/>
		</ui:repeat>


	</ice:panelGroup>
	<ice:panelGroup styleClass="clearing" />
	
	<!-- Participant Tree -->
	<pc:automationTag value="auto-ADM-PartMgmt-Tree"/>
	<ice:tree id="tree"
		value="#{participantTree.model}"
		var="item"
		hideRootNode="false"
		hideNavigation="false"
		imageDir="../../xmlhttp/css/xp/css-images/"
		actionListener="#{participantTree.nodeExpandCollapse}">
		<ice:treeNode>
			<!-- Tree node icons -->
			<f:facet name="icon">
				<ice:panelGroup style="display: inline;">
					<ice:panelGroup style="display: inline;"
						rendered="#{item.userObject.referencesRoot}"
						menuPopup="menuPopupRoot">
						<h:graphicImage value="#{item.userObject.icon}" />
					</ice:panelGroup>
					<ice:panelGroup style="display: inline;"
						rendered="#{item.userObject.referencesModel}">
						<h:graphicImage value="#{item.userObject.icon}" />
					</ice:panelGroup>
					<ice:panelGroup style="display: inline;"
						rendered="#{item.userObject.referencesScopedOrganization}">
						<h:graphicImage value="#{item.userObject.icon}" />
					</ice:panelGroup>
					<ice:panelGroup style="display: inline;"
						rendered="#{item.userObject.referencesImplicitlyScopedOrganization}">
						<h:graphicImage value="#{item.userObject.icon}" />
					</ice:panelGroup>
					<ice:panelGroup style="display: inline;"
						rendered="#{item.userObject.referencesScopedRole}">
						<h:graphicImage value="#{item.userObject.icon}" />
					</ice:panelGroup>
					<ice:panelGroup style="display: inline;"
						rendered="#{item.userObject.referencesUnscopedOrganization}">
						<h:graphicImage value="#{item.userObject.icon}" />
					</ice:panelGroup>
					<ice:panelGroup style="display: inline;"
						rendered="#{item.userObject.referencesUnscopedRole}">
						<h:graphicImage value="#{item.userObject.icon}" />
					</ice:panelGroup>
					<ice:panelGroup style="display: inline;"
						rendered="#{item.userObject.referencesUserGroup}"
						menuPopup="menuPopupUserGroup">
						<h:graphicImage value="#{item.userObject.icon}" />
					</ice:panelGroup>
					<ice:panelGroup style="display: inline; cursor: move;"
						draggable="true"
						dragOptions="dragGhost"
						dragValue="#{item.userObject.user}"
						dragMask="dragging,drag_cancel,hover_start,hover_end"
						dropMask="dragging,drag_cancel,hover_start,hover_end"
						dragListener="#{participantTree.dragObjectListener}"
						rendered="#{item.userObject.referencesUser}"
						menuPopup="menuPopupUser">
						<h:graphicImage value="#{item.userObject.icon}" />
					</ice:panelGroup>
					<ice:panelGroup style="display: inline;"
						rendered="#{item.userObject.referencesDepartment}"
						menuPopup="menuPopupDepartment">
						<h:graphicImage value="#{item.userObject.icon}" />
					</ice:panelGroup>
					<ice:panelGroup style="display: inline;"
						rendered="#{item.userObject.referencesDefaultDepartment}">
						<h:graphicImage value="#{item.userObject.icon}" />
					</ice:panelGroup>
				</ice:panelGroup>
			</f:facet>
			
			<!-- Tree node content -->
			<f:facet name="content">
				<ice:panelGroup style="display: inline;">

					<ice:menuPopup id="participantTreeMenuPopup" hideOn="mouseout">
						<c:if test="#{null != roleNodeContextMenu and fn:length(roleNodeContextMenu) > 0}">
							<ice:menuItem
								icon="#{roleNodeContextMenu[0].icon}"
								value="#{roleNodeContextMenu[0].value}"
								actionListener="#{roleNodeContextMenu[0].invoke}">
								<pc:automationTag
									value="auto-ADM-PartMgmt-Tree-MenuDlg-CreateUser"
									standAlone="false" />
								<f:attribute name="userObject" value="#{item.userObject}" />
							</ice:menuItem>
						</c:if>
					</ice:menuPopup>
					<!-- Root Node -->
					<ice:panelGroup
						style="display: inline;"
						rendered="#{item.userObject.referencesRoot}"
						menuPopup="#{contextMenuDisabled == true? '' : 'menuPopupRoot'}">
						<ice:outputText value="#{item.userObject.text}"/>

						<ice:menuPopup id="menuPopupRoot"
							hideOn="mouseout">
							<!-- This function is disabled intentionally as currently it is not supported -->
							<ice:menuItem id="createUserGroup"
								value="#{views_common_msgPropsBean['views.participantTree.contextMenu.createUserGroup']}"
								rendered="false"
								action="#{participantTree.createUserGroup}">
							</ice:menuItem>
						</ice:menuPopup>
					</ice:panelGroup>

					<!-- Model Node -->
					<ice:panelGroup
						style="display: inline;"
						rendered="#{item.userObject.referencesModel}">
						<ice:outputText value="#{item.userObject.text}"/>
					</ice:panelGroup>

					<!-- Non-Scoped Organization Node -->
					<ice:panelGroup
						style="display: inline;"
						dropTarget="true"
						dropValue="#{item.userObject}"
						hoverclass="dropTargetHover"
						rendered="#{item.userObject.referencesUnscopedOrganization}"
						menuPopup="#{contextMenuDisabled == true? '' : 'participantTreeMenuPopup'}">
						<ice:outputText value="#{item.userObject.text}"/>
					</ice:panelGroup>

					<!-- Scoped Organization Node -->
					<ice:panelGroup
						style="display: inline;"
						rendered="#{item.userObject.referencesScopedOrganization}"
						menuPopup="#{contextMenuDisabled == true? '' : 'menuPopupScopedOrganization'}">
						<ice:outputText value="#{item.userObject.text}"/>
						<ice:menuPopup id="menuPopupScopedOrganization" hideOn="mouseout">
							<c:if
								test="#{null != scopedOrgNodeContextMenu and fn:length(scopedOrgNodeContextMenu) > 0}">
								<ice:menuItem value="#{scopedOrgNodeContextMenu[0].value}"
									actionListener="#{scopedOrgNodeContextMenu[0].invoke}">
									<pc:automationTag
										value="auto-ADM-PartMgmt-Tree-MenuDlg-CreateDept"
										standAlone="false" />
									<f:attribute name="userObject" value="#{item.userObject}" />
								</ice:menuItem>
							</c:if>
						</ice:menuPopup>
					</ice:panelGroup>

					<!-- Implicitly Scoped Organization Node -->
					<ice:panelGroup
						style="display: inline;"
						dropTarget="true"
						dropValue="#{item.userObject}"
						hoverclass="dropTargetHover"
						rendered="#{item.userObject.referencesImplicitlyScopedOrganization}"
						menuPopup="#{contextMenuDisabled == true? '' : 'participantTreeMenuPopup'}">
						<ice:outputText value="#{item.userObject.text}"/>
					</ice:panelGroup>

					<!-- Role Node -->
					<ice:panelGroup
						style="display: inline;"
						dropTarget="true"
						dropValue="#{item.userObject}"
						hoverclass="dropTargetHover"
						rendered="#{item.userObject.referencesUnscopedRole || item.userObject.referencesScopedRole}"
						menuPopup="#{contextMenuDisabled == true? '' : 'participantTreeMenuPopup'}">
						<ice:outputText value="#{item.userObject.text}"/>
					</ice:panelGroup>

					<!-- UserGroup Node -->
					<ice:panelGroup
						style="display: inline;"
						dropTarget="true"
						dropValue="#{item.userObject}"
						hoverclass="dropTargetHover"
						rendered="#{item.userObject.referencesUserGroup}"
						menuPopup="#{contextMenuDisabled == true? '' : 'menuPopupUserGroup'}">
						<ice:outputText value="#{item.userObject.text}"/>

						<ice:menuPopup id="menuPopupUserGroup" hideOn="mouseout">
							<c:if
								test="#{null != userGrpNodeContextMenu and fn:length(userGrpNodeContextMenu) > 0}">
								<ice:menuItem value="#{userGrpNodeContextMenu[0].value}"
									icon="#{userGrpNodeContextMenu[0].icon}"
									actionListener="#{userGrpNodeContextMenu[0].invoke}">
									<pc:automationTag
										value="auto-ADM-PartMgmt-Tree-MenuDlg-CreateUser"
										standAlone="false" />
									<f:attribute name="userObject" value="#{item.userObject}" />
									<f:param name="menuOption" value="createUser" />
								</ice:menuItem>
							</c:if>
							<!-- This function is disabled intentionally as currently it is not supported -->
							<c:if
								test="#{null != userGrpNodeContextMenu and fn:length(userGrpNodeContextMenu) > 1}">
								<ice:menuItem value="#{userGrpNodeContextMenu[1].value}"
									icon="#{userGrpNodeContextMenu[1].icon}"
									rendered="false"
									actionListener="#{userGrpNodeContextMenu[1].invoke}">
									<f:attribute name="userObject" value="#{item.userObject}" />
									<f:param name="menuOption" value="modifyUserGroup" />
								</ice:menuItem>
							</c:if>
							<!-- This function is disabled intentionally as currently it is not supported -->
							<c:if
								test="#{null != userGrpNodeContextMenu and fn:length(userGrpNodeContextMenu) > 2}">
								<ice:menuItem value="#{userGrpNodeContextMenu[2].value}"
									icon="#{userGrpNodeContextMenu[2].icon}"
									rendered="false"
									actionListener="#{userGrpNodeContextMenu[2].invoke}">
									<f:attribute name="userObject" value="#{item.userObject}" />
									<f:param name="menuOption" value="deleteUserGroup" />
								</ice:menuItem>
							</c:if>
						</ice:menuPopup>
					</ice:panelGroup>

					<!-- User Node -->
					<ice:panelGroup
						style="display: inline;"
						rendered="#{item.userObject.referencesUser}"
						menuPopup="#{contextMenuDisabled == true? '' : 'menuPopupUser'}">
						<ice:outputText styleClass="#{item.userObject.highlightStyleClass}" value="#{item.userObject.text}"/>
						<ice:menuPopup id="menuPopupUser" hideOn="mouseout">
							<c:if
								test="#{null != userNodeContextMenu and fn:length(userNodeContextMenu) > 0}">
								<ice:menuItem
									icon="#{userNodeContextMenu[0].icon}"
									value="#{userNodeContextMenu[0].value}"
									actionListener="#{userNodeContextMenu[0].invoke}">
									<pc:automationTag
										value="auto-ADM-PartMgmt-Tree-MenuDlg-RemoveUser"
										standAlone="false" />
									<f:attribute name="userObject" value="#{item.userObject}" />
									<f:param name="uuid" value="#{item.userObject.uuid}" />
									<f:param name="menuOption" value="removeUserFromParticipant" />
								</ice:menuItem>
							</c:if>
							<!-- This function is disabled intentionally as currently it is not supported -->
							<c:if
								test="#{null != userNodeContextMenu and fn:length(userNodeContextMenu) > 1}">
								<ice:menuItem
									rendered="false"
									value="#{userNodeContextMenu[1].value}"
									actionListener="#{userNodeContextMenu[1].invoke}">
									<f:attribute name="userObject" value="#{item.userObject}" />
									<f:param name="menuOption" value="modifyUser" />
								</ice:menuItem>
							</c:if>
							<!-- This function is disabled intentionally as currently it is not supported -->
							<c:if
								test="#{null != userNodeContextMenu and fn:length(userNodeContextMenu) > 2}">
								<ice:menuItem
									rendered="false"
									value="#{userNodeContextMenu[2].value}"
									actionListener="#{userNodeContextMenu[2].invoke}">
									<f:attribute name="userObject" value="#{item.userObject}" />
									<f:param name="menuOption" value="deleteUser" />
								</ice:menuItem>
							</c:if>
						</ice:menuPopup>
					</ice:panelGroup>

					<!-- Department Node -->
					<ice:panelGroup
						style="display: inline;"
						dropTarget="true"
						dropValue="#{item.userObject}"
						hoverclass="dropTargetHover"
						rendered="#{item.userObject.referencesDepartment}"
						menuPopup="#{contextMenuDisabled == true? '' : 'menuPopupDepartment'}">
						<ice:outputText value="#{item.userObject.text}"/>

						<ice:menuPopup id="menuPopupDepartment" hideOn="mouseout">
							<c:if
								test="#{null != deptNodeContextMenu and fn:length(deptNodeContextMenu) > 0}">
								<ice:menuItem value="#{deptNodeContextMenu[0].value}"
									actionListener="#{deptNodeContextMenu[0].invoke}">
									<pc:automationTag
										value="auto-ADM-PartMgmt-Tree-MenuDlg-ModifyDept"
										standAlone="false" />
									<f:attribute name="userObject" value="#{item.userObject}" />
									<f:param name="menuOption" value="modifyDepartment" />
								</ice:menuItem>
							</c:if>
							<c:if
								test="#{null != deptNodeContextMenu and fn:length(deptNodeContextMenu) > 1}">
								<ice:menuItem value="#{deptNodeContextMenu[1].value}"
									actionListener="#{deptNodeContextMenu[1].invoke}">
									<pc:automationTag
										value="auto-ADM-PartMgmt-Tree-MenuDlg-DeleteDept"
										standAlone="false" />
									<f:attribute name="userObject" value="#{item.userObject}" />
									<f:attribute name="uuid" value="#{item.userObject.uuid}" />
									<f:param name="menuOption" value="deleteDepartment" />
								</ice:menuItem>
							</c:if>
							<c:if
								test="#{null != deptNodeContextMenu and fn:length(deptNodeContextMenu) > 2}">
								<ice:menuItem value="#{deptNodeContextMenu[2].value}"
									icon="#{deptNodeContextMenu[2].icon}"
									actionListener="#{deptNodeContextMenu[2].invoke}">
									<pc:automationTag
										value="auto-ADM-PartMgmt-Tree-DeptMenuDlg-createUser"
										standAlone="false" />
									<f:attribute name="userObject" value="#{item.userObject}" />
									<f:param name="menuOption" value="createUser" />
								</ice:menuItem>
							</c:if>
						</ice:menuPopup>
					</ice:panelGroup>
					
					<!-- Default Department Node -->
					<ice:panelGroup
						style="display: inline;"
						dropTarget="true"
						dropValue="#{item.userObject}"
						hoverclass="dropTargetHover"
						rendered="#{item.userObject.referencesDefaultDepartment}">
						<ice:outputText value="#{item.userObject.text}"/>
					</ice:panelGroup>
				</ice:panelGroup>
			</f:facet>
		</ice:treeNode>
	</ice:tree>
</f:view>